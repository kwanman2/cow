Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Start init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: init_MPI_GRMHD
Begin: MPI_Init
Begin: MPI_Init
Begin: init_MPI_GRMHD
Begin: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 61 of 256 on c497-503.stampede.tacc.utexas.edu
WORLD proc: 58 of 256 on c497-503.stampede.tacc.utexas.edu
WORLD proc: 59 of 256 on c497-503.stampede.tacc.utexas.edu
WORLD proc: 62 of 256 on c497-503.stampede.tacc.utexas.edu
WORLD proc: 60 of 256 on c497-503.stampede.tacc.utexas.edu
WORLD proc: 49 of 256 on c497-503.stampede.tacc.utexas.edu
WORLD proc: 54 of 256 on c497-503.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
WORLD proc: 57 of 256 on c497-503.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
WORLD proc: 50 of 256 on c497-503.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 53 of 256 on c497-503.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 51 of 256 on c497-503.stampede.tacc.utexas.edu
WORLD proc: 52 of 256 on c497-503.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 48 of 256 on c497-503.stampede.tacc.utexas.edu
WORLD proc: 56 of 256 on c497-503.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 55 of 256 on c497-503.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 63 of 256 on c497-503.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM1
MPICOMM1
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 51
After malloc of processtypelistlocal: 1 52
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM1
MPICOMM4
MPICOMM1
MPICOMM1
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM2
After malloc of processtypelistlocal: 1 49
MPICOMM3
MPICOMM1
MPICOMM2
MPICOMM1
MPICOMM4
MPICOMM3
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM2
After malloc of processtypelistlocal: 1 61
MPICOMM3
MPICOMM2
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM2
MPICOMM4
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 56
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM1
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 50
After malloc of processtypelistlocal: 1 63
After malloc of processtypelistlocal: 1 59
MPICOMM2
MPICOMM2
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM4
MPICOMM4
After malloc of processtypelistlocal: 1 54
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM1
After malloc of processtypelistlocal: 1 57
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 53
After malloc of processtypelistlocal: 1 60
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM1
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 48
After malloc of processtypelistlocal: 1 58
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 62
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 55
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 11 of 256 on c497-204.stampede.tacc.utexas.edu
End: MPI_Init
WORLD proc: 9 of 256 on c497-204.stampede.tacc.utexas.edu
WORLD proc: 14 of 256 on c497-204.stampede.tacc.utexas.edu
WORLD proc: 8 of 256 on c497-204.stampede.tacc.utexas.edu
WORLD proc: 4 of 256 on c497-204.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
WORLD proc: 6 of 256 on c497-204.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 2 of 256 on c497-204.stampede.tacc.utexas.edu
WORLD proc: 13 of 256 on c497-204.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 3 of 256 on c497-204.stampede.tacc.utexas.edu
End: MPI_Init
end: init_MPI
End: MPI_Init
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
WORLD proc: 10 of 256 on c497-204.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 1 of 256 on c497-204.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 0 of 256 on c497-204.stampede.tacc.utexas.edu
WORLD proc: 7 of 256 on c497-204.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 5 of 256 on c497-204.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 12 of 256 on c497-204.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 15 of 256 on c497-204.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM2
MPICOMM1
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 8
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 4
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 13
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM2
MPICOMM2
MPICOMM4
MPICOMM3
MPICOMM3
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM1
MPICOMM4
MPICOMM4
After malloc of processtypelistlocal: 1 9
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 7
After malloc of processtypelistlocal: 1 12
MPICOMM3
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM1
MPICOMM4
MPICOMM4
After malloc of processtypelistlocal: 1 2
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 1
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 5
MPICOMM3
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 6
After malloc of processtypelistlocal: 1 3
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 10
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 14
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM1
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 11
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 0
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 15
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 173 of 256 on c498-403.stampede.tacc.utexas.edu
WORLD proc: 175 of 256 on c498-403.stampede.tacc.utexas.edu
WORLD proc: 172 of 256 on c498-403.stampede.tacc.utexas.edu
WORLD proc: 168 of 256 on c498-403.stampede.tacc.utexas.edu
End: MPI_Init
end: init_MPI
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 163 of 256 on c498-403.stampede.tacc.utexas.edu
WORLD proc: 164 of 256 on c498-403.stampede.tacc.utexas.edu
WORLD proc: 165 of 256 on c498-403.stampede.tacc.utexas.edu
WORLD proc: 174 of 256 on c498-403.stampede.tacc.utexas.edu
WORLD proc: 166 of 256 on c498-403.stampede.tacc.utexas.edu
WORLD proc: 171 of 256 on c498-403.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 169 of 256 on c498-403.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 167 of 256 on c498-403.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
WORLD proc: 161 of 256 on c498-403.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 160 of 256 on c498-403.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 162 of 256 on c498-403.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 170 of 256 on c498-403.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM1
MPICOMM2
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM4
MPICOMM3
MPICOMM4
After malloc of processtypelistlocal: 1 173
MPICOMM2
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 166
processtype=1 sizeproclistlocal=256
MPICOMM4
MPICOMM2
After malloc of processtypelistlocal: 1 164
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM3
After malloc of processtypelistlocal: 1 163
MPICOMM4
After malloc of processtypelistlocal: 1 167
MPICOMM3
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 160
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 175
After malloc of processtypelistlocal: 1 170
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM1
MPICOMM3
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM4
MPICOMM4
MPICOMM2
After malloc of processtypelistlocal: 1 161
processtype=1 sizeproclistlocal=256
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM2
After malloc of processtypelistlocal: 1 162
After malloc of processtypelistlocal: 1 168
MPICOMM3
MPICOMM4
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 171
After malloc of processtypelistlocal: 1 169
After malloc of processtypelistlocal: 1 172
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 165
MPICOMM1
WORLD proc: 223 of 256 on c499-103.stampede.tacc.utexas.edu
WORLD proc: 218 of 256 on c499-103.stampede.tacc.utexas.edu
WORLD proc: 217 of 256 on c499-103.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 208 of 256 on c499-103.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 209 of 256 on c499-103.stampede.tacc.utexas.edu
WORLD proc: 211 of 256 on c499-103.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 210 of 256 on c499-103.stampede.tacc.utexas.edu
WORLD proc: 220 of 256 on c499-103.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
WORLD proc: 215 of 256 on c499-103.stampede.tacc.utexas.edu
WORLD proc: 222 of 256 on c499-103.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 219 of 256 on c499-103.stampede.tacc.utexas.edu
WORLD proc: 213 of 256 on c499-103.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 214 of 256 on c499-103.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 212 of 256 on c499-103.stampede.tacc.utexas.edu
WORLD proc: 216 of 256 on c499-103.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 221 of 256 on c499-103.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 174
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM3
MPICOMM3
MPICOMM2
MPICOMM2
MPICOMM4
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM4
MPICOMM2
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 222
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 208
After malloc of processtypelistlocal: 1 218
MPICOMM3
After malloc of processtypelistlocal: 1 219
MPICOMM3
MPICOMM1
After malloc of processtypelistlocal: 1 215
MPICOMM4
MPICOMM1
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 209
After malloc of processtypelistlocal: 1 210
MPICOMM3
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM2
MPICOMM3
MPICOMM1
MPICOMM4
MPICOMM4
After malloc of processtypelistlocal: 1 212
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM2
After malloc of processtypelistlocal: 1 223
MPICOMM3
After malloc of processtypelistlocal: 1 214
MPICOMM4
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 216
MPICOMM2
MPICOMM4
MPICOMM3
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 220
MPICOMM4
MPICOMM1
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 217
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 221
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 213
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 211
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 206 of 256 on c499-101.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 193 of 256 on c499-101.stampede.tacc.utexas.edu
WORLD proc: 194 of 256 on c499-101.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 203 of 256 on c499-101.stampede.tacc.utexas.edu
WORLD proc: 198 of 256 on c499-101.stampede.tacc.utexas.edu
WORLD proc: 192 of 256 on c499-101.stampede.tacc.utexas.edu
WORLD proc: 202 of 256 on c499-101.stampede.tacc.utexas.edu
WORLD proc: 201 of 256 on c499-101.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
WORLD proc: 204 of 256 on c499-101.stampede.tacc.utexas.edu
WORLD proc: 196 of 256 on c499-101.stampede.tacc.utexas.edu
WORLD proc: 197 of 256 on c499-101.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 200 of 256 on c499-101.stampede.tacc.utexas.edu
WORLD proc: 195 of 256 on c499-101.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
end: init_MPI
end: init_MPI
end: init_MPI
WORLD proc: 199 of 256 on c499-101.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 207 of 256 on c499-101.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 205 of 256 on c499-101.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 197
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM1
MPICOMM4
MPICOMM1
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 203
MPICOMM2
MPICOMM3
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 200
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 207
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM1
MPICOMM3
MPICOMM3
MPICOMM1
MPICOMM1
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM2
MPICOMM1
After malloc of processtypelistlocal: 1 195
MPICOMM3
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM4
MPICOMM2
MPICOMM3
MPICOMM3
After malloc of processtypelistlocal: 1 194
processtype=1 sizeproclistlocal=256
MPICOMM4
MPICOMM1
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 193
MPICOMM2
MPICOMM2
After malloc of processtypelistlocal: 1 201
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM4
After malloc of processtypelistlocal: 1 204
MPICOMM3
After malloc of processtypelistlocal: 1 199
processtype=1 sizeproclistlocal=256
MPICOMM2
MPICOMM4
After malloc of processtypelistlocal: 1 196
MPICOMM4
MPICOMM3
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 202
MPICOMM4
After malloc of processtypelistlocal: 1 198
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 205
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 192
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 206
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 78 of 256 on c497-702.stampede.tacc.utexas.edu
WORLD proc: 74 of 256 on c497-702.stampede.tacc.utexas.edu
WORLD proc: 76 of 256 on c497-702.stampede.tacc.utexas.edu
WORLD proc: 77 of 256 on c497-702.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 69 of 256 on c497-702.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 75 of 256 on c497-702.stampede.tacc.utexas.edu
WORLD proc: 66 of 256 on c497-702.stampede.tacc.utexas.edu
WORLD proc: 71 of 256 on c497-702.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 72 of 256 on c497-702.stampede.tacc.utexas.edu
WORLD proc: 65 of 256 on c497-702.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 73 of 256 on c497-702.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 64 of 256 on c497-702.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 68 of 256 on c497-702.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 67 of 256 on c497-702.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 70 of 256 on c497-702.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 79 of 256 on c497-702.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 31 of 256 on c497-401.stampede.tacc.utexas.edu
WORLD proc: 24 of 256 on c497-401.stampede.tacc.utexas.edu
WORLD proc: 28 of 256 on c497-401.stampede.tacc.utexas.edu
WORLD proc: 26 of 256 on c497-401.stampede.tacc.utexas.edu
WORLD proc: 18 of 256 on c497-401.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 22 of 256 on c497-401.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 20 of 256 on c497-401.stampede.tacc.utexas.edu
WORLD proc: 17 of 256 on c497-401.stampede.tacc.utexas.edu
WORLD proc: 25 of 256 on c497-401.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
End: MPI_Init
end: init_MPI
WORLD proc: 19 of 256 on c497-401.stampede.tacc.utexas.edu
WORLD proc: 16 of 256 on c497-401.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 23 of 256 on c497-401.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
WORLD proc: 21 of 256 on c497-401.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 30 of 256 on c497-401.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 27 of 256 on c497-401.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 29 of 256 on c497-401.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 71
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 77
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 67
MPICOMM2
After malloc of processtypelistlocal: 1 74
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM3
MPICOMM2
MPICOMM4
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM3
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 70
After malloc of processtypelistlocal: 1 78
After malloc of processtypelistlocal: 1 79
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 69
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 65
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM3
MPICOMM1
After malloc of processtypelistlocal: 1 66
MPICOMM2
MPICOMM4
MPICOMM4
MPICOMM4
MPICOMM3
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 68
After malloc of processtypelistlocal: 1 73
After malloc of processtypelistlocal: 1 75
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 72
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 76
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 64
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM2
MPICOMM2
MPICOMM4
MPICOMM4
MPICOMM3
MPICOMM3
MPICOMM1
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM1
MPICOMM2
After malloc of processtypelistlocal: 1 16
processtype=1 sizeproclistlocal=256
MPICOMM4
MPICOMM2
MPICOMM3
After malloc of processtypelistlocal: 1 19
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM4
MPICOMM2
After malloc of processtypelistlocal: 1 27
MPICOMM1
MPICOMM3
MPICOMM1
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 31
MPICOMM4
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM1
MPICOMM3
After malloc of processtypelistlocal: 1 28
MPICOMM2
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM4
MPICOMM4
MPICOMM2
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 20
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 24
After malloc of processtypelistlocal: 1 18
MPICOMM4
MPICOMM2
MPICOMM3
MPICOMM3
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 29
MPICOMM4
After malloc of processtypelistlocal: 1 21
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 26
After malloc of processtypelistlocal: 1 25
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM1
MPICOMM3
MPICOMM1
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 22
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM2
After malloc of processtypelistlocal: 1 30
MPICOMM3
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 23
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 17
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 106 of 256 on c497-802.stampede.tacc.utexas.edu
WORLD proc: 104 of 256 on c497-802.stampede.tacc.utexas.edu
End: MPI_Init
WORLD proc: 110 of 256 on c497-802.stampede.tacc.utexas.edu
End: MPI_Init
WORLD proc: 96 of 256 on c497-802.stampede.tacc.utexas.edu
End: MPI_Init
WORLD proc: 107 of 256 on c497-802.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 102 of 256 on c497-802.stampede.tacc.utexas.edu
End: MPI_Init
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 105 of 256 on c497-802.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 109 of 256 on c497-802.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 101 of 256 on c497-802.stampede.tacc.utexas.edu
WORLD proc: 98 of 256 on c497-802.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 111 of 256 on c497-802.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 100 of 256 on c497-802.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
WORLD proc: 99 of 256 on c497-802.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 97 of 256 on c497-802.stampede.tacc.utexas.edu
WORLD proc: 103 of 256 on c497-802.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 108 of 256 on c497-802.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 184 of 256 on c498-502.stampede.tacc.utexas.edu
WORLD proc: 188 of 256 on c498-502.stampede.tacc.utexas.edu
WORLD proc: 187 of 256 on c498-502.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 191 of 256 on c498-502.stampede.tacc.utexas.edu
WORLD proc: 176 of 256 on c498-502.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 180 of 256 on c498-502.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 190 of 256 on c498-502.stampede.tacc.utexas.edu
End: MPI_Init
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 177 of 256 on c498-502.stampede.tacc.utexas.edu
end: init_MPI
End: MPI_Init
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 178 of 256 on c498-502.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 186 of 256 on c498-502.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 185 of 256 on c498-502.stampede.tacc.utexas.edu
WORLD proc: 179 of 256 on c498-502.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
WORLD proc: 182 of 256 on c498-502.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 183 of 256 on c498-502.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 181 of 256 on c498-502.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
WORLD proc: 189 of 256 on c498-502.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 111
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 108
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 107
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM1
After malloc of processtypelistlocal: 1 105
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 109
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM1
MPICOMM3
MPICOMM4
MPICOMM3
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM4
MPICOMM3
MPICOMM4
MPICOMM3
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 102
After malloc of processtypelistlocal: 1 99
MPICOMM4
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 97
After malloc of processtypelistlocal: 1 101
After malloc of processtypelistlocal: 1 110
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 98
MPICOMM4
MPICOMM2
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 100
After malloc of processtypelistlocal: 1 103
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 106
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 104
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 96
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM2
MPICOMM2
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM4
After malloc of processtypelistlocal: 1 183
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 181
MPICOMM2
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 184
MPICOMM2
After malloc of processtypelistlocal: 1 188
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM3
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 179
After malloc of processtypelistlocal: 1 177
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 191
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM4
MPICOMM3
MPICOMM3
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 185
processtype=1 sizeproclistlocal=256
MPICOMM1
MPICOMM4
After malloc of processtypelistlocal: 1 189
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 187
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM1
MPICOMM2
After malloc of processtypelistlocal: 1 178
MPICOMM3
MPICOMM2
MPICOMM4
MPICOMM3
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 180
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 190
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 182
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 176
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 186
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 157 of 256 on c498-203.stampede.tacc.utexas.edu
WORLD proc: 154 of 256 on c498-203.stampede.tacc.utexas.edu
WORLD proc: 153 of 256 on c498-203.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
WORLD proc: 156 of 256 on c498-203.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
End: MPI_Init
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 152 of 256 on c498-203.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 144 of 256 on c498-203.stampede.tacc.utexas.edu
end: init_MPI
End: MPI_Init
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 159 of 256 on c498-203.stampede.tacc.utexas.edu
WORLD proc: 149 of 256 on c498-203.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
WORLD proc: 151 of 256 on c498-203.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 150 of 256 on c498-203.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
End: MPI_Init
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 155 of 256 on c498-203.stampede.tacc.utexas.edu
WORLD proc: 148 of 256 on c498-203.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 146 of 256 on c498-203.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 145 of 256 on c498-203.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 147 of 256 on c498-203.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 158 of 256 on c498-203.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM1
MPICOMM3
MPICOMM1
MPICOMM4
MPICOMM4
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM2
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 159
MPICOMM2
MPICOMM3
MPICOMM2
After malloc of processtypelistlocal: 1 156
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM3
MPICOMM3
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM2
MPICOMM4
After malloc of processtypelistlocal: 1 151
MPICOMM3
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM1
After malloc of processtypelistlocal: 1 146
MPICOMM1
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 154
MPICOMM2
MPICOMM2
MPICOMM3
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 145
MPICOMM4
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM2
After malloc of processtypelistlocal: 1 148
MPICOMM2
After malloc of processtypelistlocal: 1 149
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 147
After malloc of processtypelistlocal: 1 157
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM2
MPICOMM2
MPICOMM4
MPICOMM3
MPICOMM3
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 150
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 144
After malloc of processtypelistlocal: 1 158
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 153
MPICOMM1
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 155
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 152
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 93 of 256 on c497-703.stampede.tacc.utexas.edu
WORLD proc: 91 of 256 on c497-703.stampede.tacc.utexas.edu
WORLD proc: 92 of 256 on c497-703.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 86 of 256 on c497-703.stampede.tacc.utexas.edu
WORLD proc: 83 of 256 on c497-703.stampede.tacc.utexas.edu
WORLD proc: 80 of 256 on c497-703.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
WORLD proc: 84 of 256 on c497-703.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 87 of 256 on c497-703.stampede.tacc.utexas.edu
WORLD proc: 88 of 256 on c497-703.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 85 of 256 on c497-703.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 89 of 256 on c497-703.stampede.tacc.utexas.edu
WORLD proc: 90 of 256 on c497-703.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 82 of 256 on c497-703.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 94 of 256 on c497-703.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 95 of 256 on c497-703.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 95
After malloc of processtypelistlocal: 1 87
After malloc of processtypelistlocal: 1 85
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM1
MPICOMM2
MPICOMM4
MPICOMM3
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM1
MPICOMM4
After malloc of processtypelistlocal: 1 92
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 89
MPICOMM2
MPICOMM1
MPICOMM3
MPICOMM2
MPICOMM3
MPICOMM2
MPICOMM4
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 93
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 88
After malloc of processtypelistlocal: 1 90
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 94
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 82
After malloc of processtypelistlocal: 1 80
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 83
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 91
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 86
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 84
End: MPI_Init
WORLD proc: 81 of 256 on c497-703.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 81
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 249 of 256 on c499-202.stampede.tacc.utexas.edu
WORLD proc: 252 of 256 on c499-202.stampede.tacc.utexas.edu
WORLD proc: 253 of 256 on c499-202.stampede.tacc.utexas.edu
WORLD proc: 255 of 256 on c499-202.stampede.tacc.utexas.edu
WORLD proc: 245 of 256 on c499-202.stampede.tacc.utexas.edu
WORLD proc: 240 of 256 on c499-202.stampede.tacc.utexas.edu
WORLD proc: 250 of 256 on c499-202.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
End: MPI_Init
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 243 of 256 on c499-202.stampede.tacc.utexas.edu
end: init_MPI
End: MPI_Init
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 241 of 256 on c499-202.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 246 of 256 on c499-202.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 247 of 256 on c499-202.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 242 of 256 on c499-202.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 251 of 256 on c499-202.stampede.tacc.utexas.edu
WORLD proc: 244 of 256 on c499-202.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 254 of 256 on c499-202.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 248 of 256 on c499-202.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 245
After malloc of processtypelistlocal: 1 242
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 249
MPICOMM4
MPICOMM1
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 243
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 244
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM2
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 255
MPICOMM3
After malloc of processtypelistlocal: 1 241
MPICOMM4
MPICOMM2
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM2
MPICOMM3
After malloc of processtypelistlocal: 1 248
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 253
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 252
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM2
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 247
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM1
After malloc of processtypelistlocal: 1 254
MPICOMM1
After malloc of processtypelistlocal: 1 251
MPICOMM2
MPICOMM3
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 250
After malloc of processtypelistlocal: 1 246
After malloc of processtypelistlocal: 1 240
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 126 of 256 on c497-902.stampede.tacc.utexas.edu
WORLD proc: 122 of 256 on c497-902.stampede.tacc.utexas.edu
WORLD proc: 127 of 256 on c497-902.stampede.tacc.utexas.edu
WORLD proc: 124 of 256 on c497-902.stampede.tacc.utexas.edu
WORLD proc: 125 of 256 on c497-902.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 120 of 256 on c497-902.stampede.tacc.utexas.edu
WORLD proc: 123 of 256 on c497-902.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
WORLD proc: 114 of 256 on c497-902.stampede.tacc.utexas.edu
WORLD proc: 113 of 256 on c497-902.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 112 of 256 on c497-902.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
WORLD proc: 119 of 256 on c497-902.stampede.tacc.utexas.edu
end: init_MPI
End: MPI_Init
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 117 of 256 on c497-902.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 116 of 256 on c497-902.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 115 of 256 on c497-902.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 118 of 256 on c497-902.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 121 of 256 on c497-902.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM2
MPICOMM1
MPICOMM1
MPICOMM3
MPICOMM4
MPICOMM4
MPICOMM1
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM4
MPICOMM2
After malloc of processtypelistlocal: 1 115
After malloc of processtypelistlocal: 1 116
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM1
After malloc of processtypelistlocal: 1 127
MPICOMM2
MPICOMM4
MPICOMM2
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM1
MPICOMM3
MPICOMM1
MPICOMM4
MPICOMM2
MPICOMM2
MPICOMM1
MPICOMM3
After malloc of processtypelistlocal: 1 123
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM4
MPICOMM2
MPICOMM1
MPICOMM4
MPICOMM2
MPICOMM1
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 117
After malloc of processtypelistlocal: 1 118
MPICOMM4
MPICOMM2
MPICOMM4
MPICOMM3
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 125
After malloc of processtypelistlocal: 1 119
MPICOMM2
MPICOMM4
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM2
After malloc of processtypelistlocal: 1 122
MPICOMM4
MPICOMM2
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 121
MPICOMM4
MPICOMM1
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 126
After malloc of processtypelistlocal: 1 113
After malloc of processtypelistlocal: 1 120
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM2
After malloc of processtypelistlocal: 1 124
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 114
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 112
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 41 of 256 on c497-502.stampede.tacc.utexas.edu
WORLD proc: 42 of 256 on c497-502.stampede.tacc.utexas.edu
WORLD proc: 43 of 256 on c497-502.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
WORLD proc: 46 of 256 on c497-502.stampede.tacc.utexas.edu
end: init_MPI
End: MPI_Init
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 44 of 256 on c497-502.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 37 of 256 on c497-502.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 39 of 256 on c497-502.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 32 of 256 on c497-502.stampede.tacc.utexas.edu
WORLD proc: 45 of 256 on c497-502.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 35 of 256 on c497-502.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
End: MPI_Init
WORLD proc: 36 of 256 on c497-502.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 34 of 256 on c497-502.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 33 of 256 on c497-502.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 40 of 256 on c497-502.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 47 of 256 on c497-502.stampede.tacc.utexas.edu
WORLD proc: 38 of 256 on c497-502.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM4
MPICOMM1
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM1
After malloc of processtypelistlocal: 1 45
After malloc of processtypelistlocal: 1 40
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM1
MPICOMM4
MPICOMM1
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 38
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM4
MPICOMM3
After malloc of processtypelistlocal: 1 37
processtype=1 sizeproclistlocal=256
MPICOMM2
MPICOMM4
MPICOMM2
MPICOMM2
MPICOMM1
After malloc of processtypelistlocal: 1 35
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM3
MPICOMM1
After malloc of processtypelistlocal: 1 34
MPICOMM4
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 44
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 46
MPICOMM4
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 42
MPICOMM2
MPICOMM4
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 39
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 43
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 33
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 36
After malloc of processtypelistlocal: 1 32
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 47
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 41
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 139 of 256 on c498-103.stampede.tacc.utexas.edu
WORLD proc: 140 of 256 on c498-103.stampede.tacc.utexas.edu
WORLD proc: 136 of 256 on c498-103.stampede.tacc.utexas.edu
WORLD proc: 130 of 256 on c498-103.stampede.tacc.utexas.edu
WORLD proc: 132 of 256 on c498-103.stampede.tacc.utexas.edu
WORLD proc: 129 of 256 on c498-103.stampede.tacc.utexas.edu
WORLD proc: 137 of 256 on c498-103.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 138 of 256 on c498-103.stampede.tacc.utexas.edu
end: init_MPI
WORLD proc: 135 of 256 on c498-103.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 142 of 256 on c498-103.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
End: MPI_Init
WORLD proc: 128 of 256 on c498-103.stampede.tacc.utexas.edu
WORLD proc: 134 of 256 on c498-103.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 143 of 256 on c498-103.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
WORLD proc: 141 of 256 on c498-103.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 131 of 256 on c498-103.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 133 of 256 on c498-103.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 133
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM1
After malloc of processtypelistlocal: 1 134
MPICOMM1
After malloc of processtypelistlocal: 1 142
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 131
MPICOMM2
MPICOMM4
MPICOMM2
MPICOMM1
MPICOMM3
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 130
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 140
After malloc of processtypelistlocal: 1 139
After malloc of processtypelistlocal: 1 132
MPICOMM2
MPICOMM3
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 137
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM4
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 136
MPICOMM1
MPICOMM1
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM2
MPICOMM2
After malloc of processtypelistlocal: 1 129
MPICOMM3
MPICOMM3
MPICOMM1
MPICOMM4
MPICOMM4
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM2
After malloc of processtypelistlocal: 1 138
After malloc of processtypelistlocal: 1 141
MPICOMM3
MPICOMM4
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 143
MPICOMM2
MPICOMM4
MPICOMM3
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 135
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 128
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
End: MPI_Init
WORLD proc: 233 of 256 on c499-104.stampede.tacc.utexas.edu
WORLD proc: 238 of 256 on c499-104.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 225 of 256 on c499-104.stampede.tacc.utexas.edu
WORLD proc: 229 of 256 on c499-104.stampede.tacc.utexas.edu
WORLD proc: 231 of 256 on c499-104.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 236 of 256 on c499-104.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 227 of 256 on c499-104.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 230 of 256 on c499-104.stampede.tacc.utexas.edu
WORLD proc: 228 of 256 on c499-104.stampede.tacc.utexas.edu
WORLD proc: 224 of 256 on c499-104.stampede.tacc.utexas.edu
WORLD proc: 226 of 256 on c499-104.stampede.tacc.utexas.edu
end: init_MPI
end: init_MPI
end: init_MPI
WORLD proc: 235 of 256 on c499-104.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 239 of 256 on c499-104.stampede.tacc.utexas.edu
WORLD proc: 234 of 256 on c499-104.stampede.tacc.utexas.edu
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
end: init_MPI
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
end: init_MPI
WORLD proc: 232 of 256 on c499-104.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
Begin grmhd_init_mpi_liaisonmode_globalset()
WORLD proc: 237 of 256 on c499-104.stampede.tacc.utexas.edu
end: init_MPI
Begin grmhd_init_mpi_liaisonmode_globalset()
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM1
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM2
MPICOMM3
MPICOMM1
MPICOMM3
MPICOMM2
MPICOMM3
MPICOMM3
MPICOMM3
MPICOMM4
MPICOMM4
MPICOMM4
MPICOMM1
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 226
After malloc of processtypelistlocal: 1 229
processtype=1 sizeproclistlocal=256
MPICOMM2
After malloc of processtypelistlocal: 1 227
MPICOMM1
MPICOMM3
After malloc of processtypelistlocal: 1 233
MPICOMM4
MPICOMM4
MPICOMM1
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 237
MPICOMM1
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM2
After malloc of processtypelistlocal: 1 225
MPICOMM3
MPICOMM1
MPICOMM2
MPICOMM3
MPICOMM2
MPICOMM1
MPICOMM4
MPICOMM3
MPICOMM2
MPICOMM2
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM4
MPICOMM3
After malloc of processtypelistlocal: 1 238
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM1
processtype=1 sizeproclistlocal=256
MPICOMM4
MPICOMM2
After malloc of processtypelistlocal: 1 236
After malloc of processtypelistlocal: 1 228
processtype=1 sizeproclistlocal=256
MPICOMM3
After malloc of processtypelistlocal: 1 235
MPICOMM4
MPICOMM2
MPICOMM3
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 230
MPICOMM4
processtype=1 sizeproclistlocal=256
MPICOMM2
MPICOMM3
After malloc of processtypelistlocal: 1 232
MPICOMM4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 234
MPICOMM2
MPICOMM4
MPICOMM3
MPICOMM2
processtype=1 sizeproclistlocal=256
MPICOMM3
MPICOMM4
After malloc of processtypelistlocal: 1 239
processtype=1 sizeproclistlocal=256
MPICOMM4
After malloc of processtypelistlocal: 1 224
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 231
After MPI_Allgather: 9
After MPI_Allgather: 1
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 1
After MPI_Allgather: 41
After MPI_Allgather: 33
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 33
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 97
After MPI_Allgather: 105
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 105
After malloc of processtypelistlocal: 1 41
After MPI_Allgather: 225
After MPI_Allgather: 233
MPICOMM5
After MPI_Allgather: 45
After MPI_Allgather: 37
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 37
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 97
After MPI_Allgather: 17
After MPI_Allgather: 25
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 25
After MPI_Allgather: 47
MPICOMM5
After MPI_Allgather: 35
processtype=1 sizeproclistlocal=256
MPICOMM5
After malloc of processtypelistlocal: 1 47
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 35
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 209
After MPI_Allgather: 217
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 217
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 209
After MPI_Allgather: 213
After MPI_Allgather: 221
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 221
MPICOMM5
After MPI_Allgather: 101
After MPI_Allgather: 109
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 109
MPICOMM5
After malloc of processtypelistlocal: 1 45
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 213
After MPI_Allgather: 39
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 39
After MPI_Allgather: 111
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 99
After malloc of processtypelistlocal: 1 101
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 99
MPICOMM5
After MPI_Allgather: 103
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 103
After MPI_Allgather: 211
After MPI_Allgather: 73
After MPI_Allgather: 65
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 65
After MPI_Allgather: 81
After MPI_Allgather: 89
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 89
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 81
After MPI_Allgather: 85
After MPI_Allgather: 93
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 93
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 85
After MPI_Allgather: 83
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 83
After MPI_Allgather: 95
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 95
After MPI_Allgather: 87
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 87
After MPI_Allgather: 91
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 91
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 111
After MPI_Allgather: 107
MPICOMM5
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 211
After MPI_Allgather: 223
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 223
After MPI_Allgather: 215
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 215
After MPI_Allgather: 219
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 219
After MPI_Allgather: 57
After MPI_Allgather: 49
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 49
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 107
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 73
After MPI_Allgather: 69
MPICOMM5
After MPI_Allgather: 67
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 67
After MPI_Allgather: 79
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 79
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 71
After malloc of processtypelistlocal: 1 69
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 71
After MPI_Allgather: 75
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 75
After MPI_Allgather: 86
After MPI_Allgather: 94
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 94
MPICOMM5
After MPI_Allgather: 90
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 90
After MPI_Allgather: 102
After MPI_Allgather: 110
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 110
MPICOMM5
After MPI_Allgather: 98
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 98
After MPI_Allgather: 106
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 106
processtype=1 sizeproclistlocal=256
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 57
After MPI_Allgather: 61
After MPI_Allgather: 53
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 53
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 61
After MPI_Allgather: 63
After MPI_Allgather: 51
MPICOMM5
MPICOMM5
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 63
After malloc of processtypelistlocal: 1 51
After MPI_Allgather: 55
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 55
After MPI_Allgather: 59
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 59
After MPI_Allgather: 54
After MPI_Allgather: 62
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 62
MPICOMM5
After malloc of processtypelistlocal: 1 102
After MPI_Allgather: 214
After MPI_Allgather: 222
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 222
MPICOMM5
After MPI_Allgather: 218
MPICOMM5
After MPI_Allgather: 70
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 70
After MPI_Allgather: 82
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 82
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 218
After MPI_Allgather: 210
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 210
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 214
After malloc of processtypelistlocal: 1 86
After MPI_Allgather: 66
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 77
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 77
After malloc of processtypelistlocal: 1 66
After MPI_Allgather: 68
After MPI_Allgather: 249
After MPI_Allgather: 241
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 241
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 249
After MPI_Allgather: 245
After MPI_Allgather: 253
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 253
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 245
After MPI_Allgather: 243
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 243
After MPI_Allgather: 255
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 255
After MPI_Allgather: 247
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 247
After MPI_Allgather: 251
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 251
After MPI_Allgather: 246
After MPI_Allgather: 254
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 254
MPICOMM5
After MPI_Allgather: 250
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 250
After MPI_Allgather: 242
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 242
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 246
After MPI_Allgather: 84
After MPI_Allgather: 92
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 92
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 84
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 68
After MPI_Allgather: 108
After MPI_Allgather: 100
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 100
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 108
After MPI_Allgather: 169
After MPI_Allgather: 161
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 161
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 121
After MPI_Allgather: 113
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 113
MPICOMM5
After MPI_Allgather: 244
After MPI_Allgather: 252
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 252
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 244
After malloc of processtypelistlocal: 1 169
After MPI_Allgather: 173
After MPI_Allgather: 165
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 165
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 175
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 175
After MPI_Allgather: 163
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 163
After malloc of processtypelistlocal: 1 173
After MPI_Allgather: 167
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 167
After MPI_Allgather: 171
MPICOMM5
After MPI_Allgather: 174
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 174
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 171
After MPI_Allgather: 162
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 162
After MPI_Allgather: 170
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 170
After MPI_Allgather: 166
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 166
After MPI_Allgather: 164
After MPI_Allgather: 172
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 164
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 121
After MPI_Allgather: 117
After MPI_Allgather: 125
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 125
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 117
After MPI_Allgather: 115
After MPI_Allgather: 127
MPICOMM5
MPICOMM5
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 115
After malloc of processtypelistlocal: 1 127
After MPI_Allgather: 119
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 119
After MPI_Allgather: 123
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 123
After MPI_Allgather: 118
After MPI_Allgather: 126
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 126
MPICOMM5
After MPI_Allgather: 122
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 114
After malloc of processtypelistlocal: 1 122
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 114
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 118
After MPI_Allgather: 153
After MPI_Allgather: 145
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 145
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 153
After MPI_Allgather: 76
After MPI_Allgather: 78
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 78
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 137
After MPI_Allgather: 129
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 129
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 76
After MPI_Allgather: 74
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 74
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 233
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 225
After MPI_Allgather: 149
After MPI_Allgather: 157
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 157
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 147
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 147
After MPI_Allgather: 159
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 159
After malloc of processtypelistlocal: 1 149
After MPI_Allgather: 151
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 151
After MPI_Allgather: 155
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 155
After MPI_Allgather: 150
After MPI_Allgather: 158
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 158
MPICOMM5
After MPI_Allgather: 154
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 154
After MPI_Allgather: 146
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 146
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 150
After MPI_Allgather: 148
After MPI_Allgather: 156
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 156
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 148
After malloc of processtypelistlocal: 1 137
After MPI_Allgather: 133
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 131
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 143
After malloc of processtypelistlocal: 1 131
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 143
After malloc of processtypelistlocal: 1 133
After MPI_Allgather: 135
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 135
After MPI_Allgather: 139
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 139
After MPI_Allgather: 134
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 134
After MPI_Allgather: 130
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 141
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 141
After malloc of processtypelistlocal: 1 130
After MPI_Allgather: 132
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 132
After MPI_Allgather: 80
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 229
After MPI_Allgather: 237
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 237
MPICOMM5
After MPI_Allgather: 239
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 229
After MPI_Allgather: 227
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 227
MPICOMM5
After MPI_Allgather: 231
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 231
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 239
After MPI_Allgather: 235
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 235
After MPI_Allgather: 230
After MPI_Allgather: 238
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 172
After MPI_Allgather: 160
After MPI_Allgather: 240
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 80
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 160
After MPI_Allgather: 168
MPICOMM5
After MPI_Allgather: 116
After MPI_Allgather: 124
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 124
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 116
After MPI_Allgather: 112
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 112
After malloc of processtypelistlocal: 1 240
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 168
After MPI_Allgather: 140
After MPI_Allgather: 142
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 142
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 140
After MPI_Allgather: 138
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 138
After MPI_Allgather: 128
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 128
After MPI_Allgather: 136
After MPI_Allgather: 64
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 64
After MPI_Allgather: 72
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 72
MPICOMM5
processtype=1 sizeproclistlocal=256
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 238
MPICOMM5
After MPI_Allgather: 226
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 226
After MPI_Allgather: 234
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 234
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 230
After MPI_Allgather: 236
After MPI_Allgather: 228
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 228
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 236
After MPI_Allgather: 224
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 136
After MPI_Allgather: 201
After MPI_Allgather: 193
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 193
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 201
After malloc of processtypelistlocal: 1 224
After MPI_Allgather: 232
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 232
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 17
After MPI_Allgather: 21
After MPI_Allgather: 29
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 29
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 21
MPICOMM5
After MPI_Allgather: 5
MPICOMM5
After MPI_Allgather: 3
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 15
After malloc of processtypelistlocal: 1 3
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 15
After MPI_Allgather: 197
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 195
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 195
After MPI_Allgather: 207
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 207
After malloc of processtypelistlocal: 1 197
After MPI_Allgather: 199
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 199
After MPI_Allgather: 203
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 198
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 198
After malloc of processtypelistlocal: 1 203
After MPI_Allgather: 194
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 205
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 205
After malloc of processtypelistlocal: 1 194
After MPI_Allgather: 196
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 196
After MPI_Allgather: 204
After MPI_Allgather: 206
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 206
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 204
After MPI_Allgather: 202
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 177
After MPI_Allgather: 185
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 185
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 177
After MPI_Allgather: 181
After MPI_Allgather: 189
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 189
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 181
After MPI_Allgather: 179
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 5
After MPI_Allgather: 7
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 7
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 11
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 11
After malloc of processtypelistlocal: 1 9
After MPI_Allgather: 6
MPICOMM5
After MPI_Allgather: 2
MPICOMM5
After MPI_Allgather: 19
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 19
After MPI_Allgather: 31
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 31
After MPI_Allgather: 23
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 23
After MPI_Allgather: 27
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 27
After MPI_Allgather: 22
After MPI_Allgather: 30
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 30
MPICOMM5
After MPI_Allgather: 26
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 22
After MPI_Allgather: 18
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 18
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 26
After MPI_Allgather: 20
After MPI_Allgather: 28
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 28
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 20
After MPI_Allgather: 16
After MPI_Allgather: 43
MPICOMM5
After MPI_Allgather: 46
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 46
MPICOMM5
After MPI_Allgather: 191
processtype=1 sizeproclistlocal=256
MPICOMM5
After malloc of processtypelistlocal: 1 179
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 191
After MPI_Allgather: 183
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 183
After MPI_Allgather: 187
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 187
After MPI_Allgather: 190
After MPI_Allgather: 182
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 182
MPICOMM5
After MPI_Allgather: 186
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 190
After MPI_Allgather: 178
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 178
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 186
After MPI_Allgather: 180
After MPI_Allgather: 188
MPICOMM5
processtype=1 sizeproclistlocal=256
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 2
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 6
After MPI_Allgather: 13
MPICOMM5
After MPI_Allgather: 4
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 4
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 13
After MPI_Allgather: 12
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 12
After MPI_Allgather: 10
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 10
After MPI_Allgather: 0
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 0
After MPI_Allgather: 8
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 8
After MPI_Allgather: 14
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 14
After MPI_Allgather: 58
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 50
After malloc of processtypelistlocal: 1 54
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 50
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 58
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 34
MPICOMM5
processtype=1 sizeproclistlocal=256
After MPI_Allgather: 42
After malloc of processtypelistlocal: 1 34
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 42
After malloc of processtypelistlocal: 1 43
After MPI_Allgather: 38
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 38
After MPI_Allgather: 36
After MPI_Allgather: 44
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 44
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 36
After MPI_Allgather: 32
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 32
After MPI_Allgather: 40
MPICOMM5
After MPI_Allgather: 212
After MPI_Allgather: 52
After MPI_Allgather: 60
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 60
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 52
After MPI_Allgather: 48
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 48
After malloc of processtypelistlocal: 1 202
After MPI_Allgather: 192
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 192
After MPI_Allgather: 200
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 200
After MPI_Allgather: 248
MPICOMM5
After MPI_Allgather: 56
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 56
After MPI_Allgather: 88
MPICOMM5
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 16
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 248
After MPI_Allgather: 2
After MPI_Allgather: 14
After MPI_Allgather: 0
MPICOMM6
MPICOMM6
After MPI_Allgather: 6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
Begin myargs(*argc,*argv)
After MPI_Allgather: 8
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 40
After MPI_Allgather: 42
After MPI_Allgather: 34
After MPI_Allgather: 32
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 46
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 38
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 40
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 24
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 24
numprocs=256 ncpux1=16 ncpux2=8 ncpux3=2 numopenmpthreads=0 :: percpusize: N1=8 N2=8 N3=8
End myargs(*argc,*argv)
After MPI_Allgather: 128
After MPI_Allgather: 130
After MPI_Allgather: 142
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 134
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 136
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 170
After MPI_Allgather: 162
After MPI_Allgather: 160
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 174
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 166
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
After MPI_Allgather: 168
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
Begin init_default_MPI_GRMHD_myid()
After MPI_Allgather: 1
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 10
After MPI_Allgather: 9
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 192
After MPI_Allgather: 202
After MPI_Allgather: 194
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 206
After MPI_Allgather: 198
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 200
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End init_default_MPI_GRMHD_myid()
BEGIN Rank orders in physical model space

rankk=0::
0000 0001 0002 0003 0004 0005 0006 0007 0008 0009 0010 0011 0012 0013 0014 0015
0016 0017 0018 0019 0020 0021 0022 0023 0024 0025 0026 0027 0028 0029 0030 0031
0032 0033 0034 0035 0036After MPI_Allgather: 33
After MPI_Allgather: 41
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 138
After MPI_Allgather: 129
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 137
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 193
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 201
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
 0037 0038 0039 0040 0041 0042 0043 0044 0045 0046 0047
0048 0049After MPI_Allgather: 15
 After MPI_Allgather: 3
After MPI_Allgather: 7
0050MPICOMM6
MPICOMM6
 After MPI_Allgather: 11
After MPI_Allgather: 13
0051End grmhd_init_mpi_liaisonmode_globalset()
 End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 5
0052MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
 0053 0054 MPICOMM6
0055 0056 0057 0058End grmhd_init_mpi_liaisonmode_globalset()
 0059MPICOMM6
 0060 0061End grmhd_init_mpi_liaisonmode_globalset()
 MPICOMM6
0062 End grmhd_init_mpi_liaisonmode_globalset()
0063
0064 0065 0066 0067 0068 0069 0070 0071 0072 0073 0074 0075 0076 0077 0078 0079
0080 After MPI_Allgather: 64
After MPI_Allgather: 74
After MPI_Allgather: 66
After MPI_Allgather: 78
After MPI_Allgather: 70
MPICOMM6
MPICOMM6
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 72
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 65
MPICOMM6
After MPI_Allgather: 73
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 47
After MPI_Allgather: 35
After MPI_Allgather: 39
After MPI_Allgather: 43
MPICOMM6
After MPI_Allgather: 45
MPICOMM6
After MPI_Allgather: 37
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 143
After MPI_Allgather: 131
After MPI_Allgather: 135
MPICOMM6
After MPI_Allgather: 139
After MPI_Allgather: 133
MPICOMM6
After MPI_Allgather: 141
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
0081 0082 0083 0084 0085 0086 0087 0088 0089 0090 0091 0092 0093 0094 0095
0096 0097 0098 0099 0100 0101 0102 0103 0104 0105 0106 0107 0108 0109 0110 0111
0112 0113 0114 0115 0116 0117 0118 0119 0120 0121 0122 0123 0124 0125 0126 0127

rankk=1::
0128 0129 0130 0131 0132 0133 0134 0135 0136 0137 0138 0139 0140 0141 0142 0143
0144 0145 0146 0147 0148 0149 0150 0151 0152 0153 0154 0155 0156 0157 0158 0159
0160 0161 After MPI_Allgather: 4
0162 MPICOMM6
0163 End grmhd_init_mpi_liaisonmode_globalset()
0164 0165 0166 0167 0168 0169 0170 0171 0172 0173 0174 0175
0176 0177 0178 After MPI_Allgather: 12
0179 MPICOMM6
0180 End grmhd_init_mpi_liaisonmode_globalset()
0181 0182 0183 0184 0185 0186 0187 0188 0189 0190 0191
0192 0193 0194 0195After MPI_Allgather: 79
After MPI_Allgather: 67
After MPI_Allgather: 71
MPICOMM6
After MPI_Allgather: 77
After MPI_Allgather: 75
After MPI_Allgather: 69
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 207
After MPI_Allgather: 195
After MPI_Allgather: 199
MPICOMM6
After MPI_Allgather: 205
MPICOMM6
After MPI_Allgather: 203
After MPI_Allgather: 197
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
 0196 0197 0198 0199 0200 0201 0202 0203 0204 0205 0206 0207
0208 0209 0210 0211 0212 0213 0214 0215 0216 0217 0218 0219 0220 0221 0222 0223
0224 0225 0226 0227 0228 0229 0230 0231 0232 0233 0234 0235 0236 0237 0238 0239
0240 0241 0242 0243 0244 0245 0246 0247 0248 0249 0250 0251 0252 0253 0254 0255



END Rank orders in physical model space
After MPI_Allgather: 68
After MPI_Allgather: 76
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 196
After MPI_Allgather: 204
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 96
MPICOMM5
After MPI_Allgather: 144
MPICOMM5
processtype=1 sizeproclistlocal=256
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 120
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 120
After malloc of processtypelistlocal: 1 144
After MPI_Allgather: 152
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 152
After MPI_Allgather: 144
After MPI_Allgather: 152
After MPI_Allgather: 146
After MPI_Allgather: 158
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 154
After MPI_Allgather: 150
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 145
After MPI_Allgather: 153
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 147
After MPI_Allgather: 155
After MPI_Allgather: 159
After MPI_Allgather: 151
MPICOMM6
MPICOMM6
After MPI_Allgather: 149
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 157
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 156
After MPI_Allgather: 148
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 96
After MPI_Allgather: 104
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 104
After MPI_Allgather: 106
After MPI_Allgather: 98
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 96
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 110
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 102
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 104
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 97
After MPI_Allgather: 105
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 111
After MPI_Allgather: 99
After MPI_Allgather: 107
After MPI_Allgather: 103
MPICOMM6
MPICOMM6
After MPI_Allgather: 109
After MPI_Allgather: 101
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 100
After MPI_Allgather: 108
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 88
After malloc of processtypelistlocal: 1 188
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 180
After MPI_Allgather: 176
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 176
After MPI_Allgather: 184
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 184
After MPI_Allgather: 120
After MPI_Allgather: 122
MPICOMM6
After MPI_Allgather: 112
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 126
After MPI_Allgather: 114
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 118
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 113
After MPI_Allgather: 121
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 123
After MPI_Allgather: 115
After MPI_Allgather: 119
After MPI_Allgather: 127
After MPI_Allgather: 125
After MPI_Allgather: 117
MPICOMM6
MPICOMM6
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 124
After MPI_Allgather: 116
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 80
After MPI_Allgather: 90
After MPI_Allgather: 88
MPICOMM6
After MPI_Allgather: 82
MPICOMM6
After MPI_Allgather: 86
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
After MPI_Allgather: 94
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 81
After MPI_Allgather: 89
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 91
After MPI_Allgather: 83
MPICOMM6
After MPI_Allgather: 95
After MPI_Allgather: 87
After MPI_Allgather: 93
MPICOMM6
After MPI_Allgather: 85
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 92
After MPI_Allgather: 84
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 248
After MPI_Allgather: 250
MPICOMM6
After MPI_Allgather: 240
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
After MPI_Allgather: 254
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
After MPI_Allgather: 242
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 246
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 184
After MPI_Allgather: 186
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 178
MPICOMM6
After MPI_Allgather: 176
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 190
After MPI_Allgather: 182
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 177
After MPI_Allgather: 185
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 179
After MPI_Allgather: 187
After MPI_Allgather: 191
After MPI_Allgather: 183
After MPI_Allgather: 189
After MPI_Allgather: 181
MPICOMM6
MPICOMM6
MPICOMM6
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 188
After MPI_Allgather: 180
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 56
After MPI_Allgather: 58
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 50
After MPI_Allgather: 48
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 54
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 62
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 241
After MPI_Allgather: 249
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 243
MPICOMM6
After MPI_Allgather: 251
After MPI_Allgather: 255
After MPI_Allgather: 247
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 245
MPICOMM6
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 253
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 252
After MPI_Allgather: 244
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 220
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 220
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 212
After MPI_Allgather: 208
MPICOMM5
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 208
After MPI_Allgather: 216
MPICOMM5
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 49
After MPI_Allgather: 57
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 59
After MPI_Allgather: 51
After MPI_Allgather: 63
MPICOMM6
MPICOMM6
After MPI_Allgather: 53
After MPI_Allgather: 55
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 61
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 60
After MPI_Allgather: 52
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 16
After MPI_Allgather: 24
After MPI_Allgather: 18
After MPI_Allgather: 26
After MPI_Allgather: 30
After MPI_Allgather: 22
MPICOMM6
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 234
After MPI_Allgather: 226
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 224
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 238
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 230
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 232
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
processtype=1 sizeproclistlocal=256
After malloc of processtypelistlocal: 1 216
After MPI_Allgather: 208
After MPI_Allgather: 218
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 216
MPICOMM6
After MPI_Allgather: 210
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 222
MPICOMM6
After MPI_Allgather: 214
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 217
After MPI_Allgather: 209
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 219
MPICOMM6
After MPI_Allgather: 211
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 223
After MPI_Allgather: 215
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 213
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 221
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 220
After MPI_Allgather: 212
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 25
After MPI_Allgather: 17
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 27
After MPI_Allgather: 19
After MPI_Allgather: 31
MPICOMM6
After MPI_Allgather: 23
After MPI_Allgather: 29
MPICOMM6
After MPI_Allgather: 21
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 28
After MPI_Allgather: 20
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 225
After MPI_Allgather: 233
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 239
After MPI_Allgather: 235
After MPI_Allgather: 227
After MPI_Allgather: 231
MPICOMM6
MPICOMM6
After MPI_Allgather: 237
MPICOMM6
MPICOMM6
After MPI_Allgather: 229
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 228
After MPI_Allgather: 236
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 161
After MPI_Allgather: 169
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 132
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 140
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 36
After MPI_Allgather: 44
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 175
After MPI_Allgather: 163
After MPI_Allgather: 171
After MPI_Allgather: 167
MPICOMM6
After MPI_Allgather: 173
After MPI_Allgather: 165
MPICOMM6
MPICOMM6
MPICOMM6
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
After MPI_Allgather: 164
After MPI_Allgather: 172
MPICOMM6
MPICOMM6
End grmhd_init_mpi_liaisonmode_globalset()
End grmhd_init_mpi_liaisonmode_globalset()
begin: init_genfiles ... opened: 0_fail.out.grmhd.0000
opened: 0_log.out.grmhd.0000
opened: 0_logdt.out.grmhd.0000
opened: 0_logfull.grmhd.out
opened: 0_logdtfull.grmhd.out
opened: 0_logstep.grmhd.out
opened: 0_logperf.grmhd.out
end: init_genfiles
begin: init_placeongrid_gridlocation ... 
numprocs(MPI)=256 ncpux1=16 ncpux2=8 ncpux3=2 numopenmpthreads=0

 Per MPI Task: N1=8 N2=8 N3=8
totalzones: 131072
end: init_placeongrid_gridlocation
done with init_MPI_setupfilesandgrid()
Begin report_myid()
End report_myid()
WARNING: Could not open go.cont file: go.cont , assume user doesn't want to use it
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of char: 1
Size of long int: 8
Size of short: 2
Size of long long int: 8
Size of int: 4
Size of float: 4
Size of size_t: 8
Size of double: 8
Size of long int: 8
Size of long double: 16
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
System is Little Endian
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
System is Little Endian
Size of float: 4
Size of char: 1
System is Little Endian
System is Little Endian
Size of short: 2
Size of char: 1
System is Little Endian
Size of int: 4
Size of short: 2
Size of double: 8
Size of size_t: 8
Size of long double: 16
Size of char: 1
Size of char: 1
Size of short: 2
Size of short: 2
System is Little Endian
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of size_t: 8
Size of long int: 8
Size of int: 4
Size of long long int: 8
Size of long int: 8
Size of char: 1
Size of float: 4
Size of short: 2
Size of size_t: 8
Size of long long int: 8
Size of int: 4
Size of long int: 8
Size of double: 8
Size of float: 4
Size of long double: 16
Size of size_t: 8
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of double: 8
Size of char: 1
Size of long double: 16
System is Little Endian
System is Little Endian
Size of short: 2
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of size_t: 8
Size of char: 1
Size of float: 4
Size of short: 2
Size of char: 1
Size of long int: 8
System is Little Endian
Size of double: 8
Size of long long int: 8
Size of char: 1
Size of float: 4
Size of long double: 16
Size of int: 4
Size of short: 2
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of size_t: 8
Size of double: 8
Size of long int: 8
Size of long double: 16
Size of size_t: 8
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of float: 4
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of char: 1
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of int: 4
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of long long int: 8
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of short: 2
Size of double: 8
Size of int: 4
Size of long double: 16
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
System is Little Endian
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
Size of char: 1
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of short: 2
Size of int: 4
System is Little Endian
Size of size_t: 8
System is Little Endian
Size of long int: 8
Size of char: 1
Size of char: 1
Size of short: 2
Size of long long int: 8
Size of short: 2
Size of int: 4
Size of float: 4
Size of int: 4
Size of char: 1
Size of size_t: 8
Size of size_t: 8
Size of long int: 8
System is Little Endian
Size of short: 2
Size of long int: 8
Size of long long int: 8
Size of long long int: 8
Size of char: 1
Size of double: 8
Size of float: 4
Size of float: 4
Size of int: 4
Size of short: 2
Size of double: 8
Size of double: 8
System is Little Endian
Size of size_t: 8
System is Little Endian
System is Little Endian
Size of int: 4
Size of char: 1
Size of long int: 8
Size of size_t: 8
Size of char: 1
Size of char: 1
Size of short: 2
System is Little Endian
System is Little Endian
Size of short: 2
Size of short: 2
Size of int: 4
Size of long long int: 8
System is Little Endian
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of long double: 16
System is Little Endian
Size of size_t: 8
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
System is Little Endian
Size of long double: 16
Size of long int: 8
Size of long int: 8
Size of short: 2
Size of long long int: 8
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of float: 4
Size of float: 4
Size of size_t: 8
Size of double: 8
Size of double: 8
Size of long double: 16
Size of long double: 16
Size of long int: 8
Size of long double: 16
System is Little Endian
System is Little Endian
System is Little Endian
System is Little Endian
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
System is Little Endian
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of char: 1
Size of char: 1
Size of double: 8
Size of char: 1
Size of short: 2
Size of short: 2
Size of long double: 16
Size of int: 4
Size of int: 4
Size of short: 2
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of long int: 8
Size of size_t: 8
Size of size_t: 8
Size of size_t: 8
Size of long int: 8
Size of long int: 8
Size of long int: 8
Size of long long int: 8
Size of long long int: 8
Size of long long int: 8
Size of long long int: 8
Size of float: 4
Size of float: 4
Size of float: 4
Size of float: 4
Size of double: 8
Size of double: 8
Size of double: 8
Size of long double: 16
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of char: 1
Size of double: 8
Size of short: 2
Size of int: 4
Size of long double: 16
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of int: 4
Size of char: 1
Size of char: 1
Size of char: 1
Size of char: 1
Size of short: 2
Size of short: 2
Size of short: 2
Size of short: 2
Size of int: 4
Size of int: 4
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of size_t: 8
Size of size_t: 8
Size of size_t: 8
Size of long int: 8
Size of long int: 8
Size of long int: 8
Size of long long int: 8
System is Little Endian
Size of long int: 8
Size of long long int: 8
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
System is Little Endian
Size of long long int: 8
Size of char: 1
Size of char: 1
Size of float: 4
Size of double: 8
Size of short: 2
Size of short: 2
System is Little Endian
Size of int: 4
Size of long double: 16
Size of int: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
System is Little Endian
Size of size_t: 8
System is Little Endian
Size of short: 2
Size of char: 1
Size of long int: 8
Size of short: 2
Size of int: 4
System is Little Endian
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
System is Little Endian
System is Little Endian
Size of size_t: 8
Size of char: 1
Size of char: 1
Size of long int: 8
Size of char: 1
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
System is Little Endian
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
System is Little Endian
Size of float: 4
System is Little Endian
System is Little Endian
Size of double: 8
Size of char: 1
Size of long double: 16
Size of char: 1
Size of short: 2
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long long int: 8
Size of size_t: 8
Size of short: 2
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
Size of char: 1
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of short: 2
System is Little Endian
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of size_t: 8
Size of char: 1
Size of long int: 8
Size of short: 2
Size of long long int: 8
Size of int: 4
System is Little Endian
Size of long int: 8
Size of size_t: 8
Size of char: 1
System is Little Endian
Size of long long int: 8
Size of short: 2
System is Little Endian
Size of char: 1
System is Little Endian
Size of char: 1
Size of char: 1
Size of float: 4
Size of int: 4
Size of double: 8
Size of int: 4
Size of long int: 8
Size of int: 4
Size of long double: 16
Size of short: 2
Size of long int: 8
Size of char: 1
Size of int: 4
Size of long long int: 8
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of size_t: 8
Size of float: 4
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of size_t: 8
Size of long int: 8
Size of long double: 16
Size of double: 8
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of long int: 8
Size of double: 8
Size of long double: 16
Size of int: 4
Size of long long int: 8
Size of long long int: 8
Size of size_t: 8
Size of long double: 16
Size of short: 2
Size of char: 1
Size of int: 4
Size of long int: 8
Size of size_t: 8
Size of short: 2
Size of long long int: 8
System is Little Endian
Size of long int: 8
Size of int: 4
System is Little Endian
Size of size_t: 8
System is Little Endian
Size of char: 1
Size of float: 4
Size of short: 2
Size of double: 8
Size of int: 4
Size of char: 1
Size of int: 4
Size of size_t: 8
Size of short: 2
Size of long double: 16
Size of long int: 8
Size of int: 4
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of float: 4
Size of int: 4
Size of size_t: 8
Size of size_t: 8
Size of double: 8
System is Little Endian
Size of char: 1
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of long long int: 8
Size of size_t: 8
Size of float: 4
Size of double: 8
Size of double: 8
Size of long int: 8
Size of long double: 16
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of long double: 16
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of long int: 8
Size of long double: 16
Size of long int: 8
Size of double: 8
Size of long long int: 8
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
Size of long long int: 8
Size of float: 4
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of long long int: 8
Size of double: 8
Size of double: 8
Size of double: 8
Size of float: 4
Size of long double: 16
Size of long long int: 8
Size of double: 8
Size of long double: 16
Size of long double: 16
Size of float: 4
Size of long double: 16
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of double: 8
Size of size_t: 8
System is Little Endian
Size of long double: 16
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long long int: 8
Size of long double: 16
Size of char: 1
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of int: 4
Size of float: 4
Size of size_t: 8
Size of long int: 8
Size of long int: 8
Size of long long int: 8
Size of double: 8
Size of float: 4
Size of long long int: 8
Size of long double: 16
Size of char: 1
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of size_t: 8
Size of float: 4
Size of short: 2
Size of long double: 16
Size of long int: 8
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of long double: 16
Size of int: 4
Size of float: 4
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of long int: 8
Size of long double: 16
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of short: 2
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of long double: 16
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
Size of char: 1
Size of int: 4
Size of char: 1
Size of short: 2
Size of size_t: 8
Size of int: 4
Size of short: 2
Size of long int: 8
Size of size_t: 8
Size of int: 4
Size of long long int: 8
Size of size_t: 8
System is Little Endian
Size of long int: 8
System is Little Endian
Size of float: 4
Size of char: 1
Size of char: 1
Size of short: 2
Size of double: 8
Size of int: 4
Size of long double: 16
Size of size_t: 8
Size of short: 2
System is Little Endian
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of char: 1
Size of long long int: 8
Size of float: 4
Size of char: 1
Size of double: 8
System is Little Endian
Size of short: 2
Size of long double: 16
Size of short: 2
Size of int: 4
Size of int: 4
Size of size_t: 8
System is Little Endian
Size of char: 1
Size of long int: 8
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
System is Little Endian
System is Little Endian
Size of char: 1
Size of float: 4
Size of double: 8
Size of long double: 16
Size of long long int: 8
Size of short: 2
Size of size_t: 8
Size of float: 4
Size of char: 1
Size of long int: 8
Size of double: 8
Size of short: 2
Size of long long int: 8
Size of int: 4
Size of long double: 16
Size of int: 4
Size of float: 4
Size of size_t: 8
Size of size_t: 8
Size of long long int: 8
Size of long int: 8
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of long double: 16
Size of long int: 8
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of double: 8
Size of float: 4
Size of float: 4
Size of double: 8
Size of int: 4
Size of long double: 16
Size of long double: 16
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
Size of char: 1
Size of int: 4
System is Little Endian
Size of short: 2
Size of size_t: 8
Size of int: 4
Size of long int: 8
Size of size_t: 8
Size of long long int: 8
Size of long int: 8
Size of char: 1
Size of float: 4
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of double: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of short: 2
Size of int: 4
System is Little Endian
Size of size_t: 8
Size of long int: 8
Size of char: 1
Size of long long int: 8
Size of char: 1
Size of float: 4
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
System is Little Endian
Size of long long int: 8
Size of double: 8
Size of long double: 16
Size of float: 4
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of char: 1
Size of double: 8
Size of int: 4
Size of long double: 16
Size of short: 2
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of size_t: 8
System is Little Endian
Size of long int: 8
Size of long double: 16
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of float: 4
Size of int: 4
Size of double: 8
Size of char: 1
Size of size_t: 8
Size of long double: 16
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of short: 2
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of int: 4
Size of double: 8
Size of size_t: 8
Size of long double: 16
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of char: 1
Size of short: 2
Size of short: 2
Size of int: 4
Size of char: 1
Size of int: 4
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
System is Little Endian
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
System is Little Endian
Size of long int: 8
Size of long long int: 8
System is Little Endian
Size of float: 4
Size of char: 1
System is Little Endian
Size of double: 8
System is Little Endian
Size of long double: 16
System is Little Endian
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
System is Little Endian
Size of char: 1
Size of char: 1
Size of short: 2
Size of char: 1
Size of short: 2
Size of char: 1
Size of short: 2
Size of short: 2
Size of char: 1
Size of short: 2
Size of short: 2
Size of short: 2
Size of int: 4
Size of int: 4
Size of int: 4
Size of int: 4
System is Little Endian
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of size_t: 8
Size of size_t: 8
Size of char: 1
System is Little Endian
Size of long int: 8
Size of size_t: 8
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of long int: 8
Size of int: 4
Size of char: 1
Size of long int: 8
Size of long long int: 8
Size of short: 2
Size of float: 4
Size of size_t: 8
Size of long long int: 8
Size of short: 2
Size of float: 4
Size of double: 8
Size of long int: 8
Size of double: 8
Size of int: 4
Size of long double: 16
Size of size_t: 8
Size of size_t: 8
System is Little Endian
Size of long int: 8
Size of long int: 8
Size of long long int: 8
Size of short: 2
Size of char: 1
Size of float: 4
Size of long long int: 8
Size of short: 2
Size of double: 8
System is Little Endian
Size of int: 4
Size of long double: 16
System is Little Endian
Size of int: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
Size of char: 1
Size of size_t: 8
Size of char: 1
Size of long int: 8
Size of short: 2
Size of char: 1
Size of long long int: 8
Size of int: 4
Size of short: 2
Size of float: 4
Size of char: 1
Size of size_t: 8
Size of double: 8
Size of int: 4
Size of long int: 8
Size of long double: 16
Size of short: 2
Size of short: 2
Size of long long int: 8
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of int: 4
Size of int: 4
Size of double: 8
Size of long int: 8
Size of size_t: 8
Size of long double: 16
Size of long long int: 8
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of float: 4
Size of long long int: 8
Size of long int: 8
Size of float: 4
Size of long long int: 8
Size of double: 8
Size of float: 4
Size of long double: 16
Size of double: 8
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of long int: 8
Size of long double: 16
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of float: 4
Size of float: 4
Size of size_t: 8
Size of double: 8
Size of double: 8
Size of long long int: 8
Size of long double: 16
Size of long double: 16
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of double: 8
Size of double: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long int: 8
Size of long long int: 8
Size of long double: 16
Size of long double: 16
Size of long long int: 8
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of double: 8
Size of double: 8
Size of long double: 16
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
System is Little Endian
System is Little Endian
System is Little Endian
System is Little Endian
System is Little Endian
System is Little Endian
Size of char: 1
Size of char: 1
Size of short: 2
Size of short: 2
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of size_t: 8
Size of long int: 8
Size of long int: 8
Size of long long int: 8
Size of long long int: 8
Size of float: 4
Size of float: 4
Size of double: 8
Size of double: 8
Size of long double: 16
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of char: 1
Size of char: 1
Size of short: 2
Size of short: 2
Size of short: 2
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of long int: 8
System is Little Endian
Size of float: 4
Size of long long int: 8
Size of long long int: 8
Size of double: 8
Size of float: 4
Size of float: 4
Size of long double: 16
Size of double: 8
Size of double: 8
Size of char: 1
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
System is Little Endian
Size of char: 1
Size of long int: 8
Size of short: 2
Size of long long int: 8
Size of int: 4
Size of float: 4
Size of size_t: 8
Size of double: 8
Size of long int: 8
Size of long double: 16
Size of char: 1
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of int: 4
Size of float: 4
Size of size_t: 8
Size of double: 8
Size of long int: 8
System is Little Endian
Size of long double: 16
Size of long long int: 8
System is Little Endian
Size of float: 4
Size of char: 1
Size of double: 8
Size of short: 2
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
System is Little Endian
System is Little Endian
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of long double: 16
System is Little Endian
Size of short: 2
System is Little Endian
System is Little Endian
Size of int: 4
Size of char: 1
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
System is Little Endian
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
System is Little Endian
Size of long int: 8
Size of char: 1
Size of char: 1
Size of short: 2
Size of long long int: 8
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
System is Little Endian
Size of short: 2
Size of short: 2
Size of int: 4
Size of int: 4
System is Little Endian
System is Little Endian
Size of size_t: 8
Size of char: 1
Size of size_t: 8
Size of long int: 8
Size of short: 2
Size of long int: 8
Size of long long int: 8
Size of int: 4
Size of char: 1
System is Little Endian
Size of size_t: 8
Size of float: 4
Size of char: 1
Size of char: 1
Size of short: 2
Size of short: 2
Size of char: 1
Size of size_t: 8
Size of int: 4
Size of int: 4
Size of long int: 8
Size of short: 2
Size of long long int: 8
Size of int: 4
Size of size_t: 8
System is Little Endian
Size of size_t: 8
Size of long int: 8
Size of float: 4
Size of long long int: 8
Size of char: 1
Size of float: 4
Size of double: 8
Size of double: 8
Size of short: 2
Size of int: 4
Size of long double: 16
Size of long double: 16
Size of int: 4
Size of long int: 8
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of long long int: 8
Size of long int: 8
Size of long int: 8
System is Little Endian
Size of long long int: 8
Size of long long int: 8
System is Little Endian
Size of float: 4
Size of float: 4
Size of float: 4
Size of double: 8
Size of double: 8
Size of double: 8
Size of long double: 16
Size of long double: 16
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
System is Little Endian
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of char: 1
Size of long double: 16
Size of short: 2
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of int: 4
Size of float: 4
Size of size_t: 8
Size of double: 8
Size of long int: 8
Size of long double: 16
Size of long long int: 8
Size of float: 4
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of char: 1
Size of short: 2
Size of short: 2
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of size_t: 8
Size of long int: 8
Size of long int: 8
Size of long long int: 8
Size of long long int: 8
Size of float: 4
Size of float: 4
Size of double: 8
Size of double: 8
Size of long double: 16
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
System is Little Endian
System is Little Endian
System is Little Endian
System is Little Endian
Size of char: 1
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
System is Little Endian
Size of short: 2
System is Little Endian
Size of char: 1
Size of long double: 16
System is Little Endian
Size of int: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of char: 1
Size of char: 1
Size of int: 4
Size of size_t: 8
Size of short: 2
Size of size_t: 8
Size of long int: 8
Size of int: 4
Size of long int: 8
Size of short: 2
Size of size_t: 8
Size of long long int: 8
Size of long long int: 8
Size of long int: 8
Size of float: 4
Size of float: 4
Size of long long int: 8
Size of double: 8
Size of double: 8
Size of float: 4
Size of long double: 16
Size of int: 4
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of float: 4
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
Size of int: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of size_t: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of float: 4
Size of double: 8
Size of long double: 16
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of long int: 8
Size of char: 1
Size of long long int: 8
Size of short: 2
Size of int: 4
Size of float: 4
Size of size_t: 8
Size of long int: 8
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
System is Little Endian
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
System is Little Endian
Size of double: 8
Size of char: 1
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of short: 2
Size of int: 4
Size of size_t: 8
System is Little Endian
Size of long int: 8
Size of char: 1
Size of char: 1
Size of char: 1
Size of short: 2
Size of short: 2
Size of char: 1
Size of int: 4
Size of short: 2
Size of int: 4
System is Little Endian
Size of int: 4
System is Little Endian
Size of size_t: 8
System is Little Endian
Size of size_t: 8
Size of char: 1
Size of char: 1
System is Little Endian
Size of short: 2
Size of short: 2
Size of long int: 8
System is Little Endian
System is Little Endian
Size of int: 4
Size of long long int: 8
System is Little Endian
Size of char: 1
Size of float: 4
System is Little Endian
Size of long long int: 8
Size of char: 1
Size of size_t: 8
Size of char: 1
Size of float: 4
Size of long int: 8
Size of double: 8
Size of long long int: 8
Size of short: 2
Size of long double: 16
Size of short: 2
Size of int: 4
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of size_t: 8
Size of int: 4
Size of long double: 16
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of long long int: 8
Size of float: 4
Size of long long int: 8
Size of float: 4
Size of double: 8
System is Little Endian
System is Little Endian
System is Little Endian
System is Little Endian
Size of char: 1
System is Little Endian
Size of char: 1
Size of short: 2
Size of double: 8
Size of long int: 8
Size of long double: 16
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
Size of char: 1
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of size_t: 8
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
System is Little Endian
Size of long int: 8
Size of float: 4
Size of long long int: 8
Size of double: 8
Size of long double: 16
Size of char: 1
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of float: 4
Size of short: 2
Size of double: 8
Size of int: 4
Size of char: 1
Size of long double: 16
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of short: 2
System is Little Endian
Size of int: 4
Size of long long int: 8
Size of size_t: 8
Size of float: 4
Size of long int: 8
Size of long int: 8
Size of long long int: 8
Size of double: 8
Size of char: 1
Size of long long int: 8
Size of float: 4
Size of long double: 16
Size of float: 4
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
Size of double: 8
Size of short: 2
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of long double: 16
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of char: 1
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
Size of short: 2
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of size_t: 8
Size of long double: 16
Size of long int: 8
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of short: 2
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of size_t: 8
Size of long int: 8
Size of long int: 8
Size of long long int: 8
Size of long long int: 8
Size of float: 4
Size of float: 4
Size of double: 8
Size of double: 8
Size of long double: 16
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of short: 2
Size of int: 4
Size of int: 4
Size of char: 1
Size of char: 1
Size of short: 2
Size of size_t: 8
Size of char: 1
Size of long int: 8
Size of int: 4
Size of short: 2
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of size_t: 8
Size of short: 2
Size of size_t: 8
System is Little Endian
Size of int: 4
Size of char: 1
System is Little Endian
Size of short: 2
System is Little Endian
Size of size_t: 8
Size of char: 1
Size of int: 4
Size of long int: 8
System is Little Endian
Size of char: 1
Size of short: 2
Size of long long int: 8
Size of size_t: 8
Size of int: 4
Size of char: 1
Size of float: 4
System is Little Endian
Size of size_t: 8
Size of short: 2
System is Little Endian
Size of double: 8
Size of long int: 8
Size of int: 4
System is Little Endian
Size of size_t: 8
Size of char: 1
Size of long long int: 8
Size of long double: 16
Size of short: 2
Size of float: 4
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of long long int: 8
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of int: 4
Size of float: 4
Size of double: 8
Size of size_t: 8
Size of long double: 16
Size of long long int: 8
Size of double: 8
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of long double: 16
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of float: 4
Size of double: 8
Size of double: 8
Size of long int: 8
Size of char: 1
Size of long double: 16
Size of short: 2
Size of long double: 16
Size of long long int: 8
Size of int: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of size_t: 8
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of long int: 8
Size of double: 8
Size of long long int: 8
Size of long double: 16
Size of float: 4
Size of char: 1
Size of double: 8
Size of long long int: 8
Size of short: 2
Size of long double: 16
Size of int: 4
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of float: 4
Size of double: 8
Size of long double: 16
Size of char: 1
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of long long int: 8
Size of double: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of int: 4
Size of long long int: 8
Size of size_t: 8
Size of float: 4
Size of long int: 8
Size of double: 8
Size of long double: 16
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of char: 1
System is Little Endian
Size of char: 1
Size of double: 8
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long double: 16
Size of long int: 8
Size of long long int: 8
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
Size of char: 1
Size of char: 1
Size of short: 2
Size of short: 2
Size of int: 4
Size of char: 1
Size of int: 4
Size of char: 1
Size of short: 2
Size of size_t: 8
Size of int: 4
Size of short: 2
Size of size_t: 8
Size of int: 4
System is Little Endian
Size of size_t: 8
Size of long int: 8
System is Little Endian
System is Little Endian
Size of long long int: 8
Size of char: 1
System is Little Endian
Size of float: 4
Size of char: 1
Size of short: 2
Size of size_t: 8
Size of int: 4
Size of char: 1
Size of long int: 8
Size of double: 8
Size of char: 1
Size of long long int: 8
Size of short: 2
System is Little Endian
Size of short: 2
Size of float: 4
System is Little Endian
Size of int: 4
Size of char: 1
System is Little Endian
Size of char: 1
Size of char: 1
Size of size_t: 8
Size of short: 2
Size of short: 2
Size of long int: 8
Size of long int: 8
Size of int: 4
Size of short: 2
Size of int: 4
Size of long long int: 8
Size of long long int: 8
Size of float: 4
Size of float: 4
Size of size_t: 8
Size of double: 8
Size of double: 8
Size of size_t: 8
Size of long double: 16
Size of long int: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of long long int: 8
Size of long int: 8
Size of float: 4
Size of float: 4
Size of double: 8
Size of long long int: 8
Size of double: 8
Size of float: 4
Size of long double: 16
Size of size_t: 8
Size of long double: 16
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
Size of long int: 8
Size of short: 2
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of float: 4
Size of int: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
System is Little Endian
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of long double: 16
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of char: 1
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of int: 4
Size of long double: 16
Size of size_t: 8
Size of int: 4
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of long long int: 8
Size of long int: 8
Size of float: 4
Size of double: 8
Size of long long int: 8
Size of long double: 16
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
System is Little Endian
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of int: 4
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
System is Little Endian
System is Little Endian
Size of long double: 16
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
System is Little Endian
Size of char: 1
Size of short: 2
Size of char: 1
Size of int: 4
System is Little Endian
System is Little Endian
Size of short: 2
Size of short: 2
Size of size_t: 8
Size of char: 1
System is Little Endian
Size of int: 4
Size of char: 1
Size of char: 1
Size of size_t: 8
Size of short: 2
Size of char: 1
Size of short: 2
Size of short: 2
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of int: 4
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of long int: 8
Size of size_t: 8
Size of long long int: 8
Size of long long int: 8
Size of short: 2
Size of long int: 8
Size of int: 4
Size of long long int: 8
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of float: 4
Size of size_t: 8
Size of long int: 8
Size of long int: 8
Size of float: 4
Size of long int: 8
Size of float: 4
Size of double: 8
Size of long long int: 8
Size of double: 8
Size of long long int: 8
Size of double: 8
Size of float: 4
Size of long double: 16
Size of double: 8
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of double: 8
Size of long double: 16
Size of long long int: 8
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of short: 2
System is Little Endian
Size of int: 4
Size of size_t: 8
Size of long int: 8
System is Little Endian
Size of long long int: 8
Size of char: 1
Size of float: 4
Size of short: 2
Size of char: 1
Size of double: 8
Size of int: 4
Size of short: 2
Size of long double: 16
Size of size_t: 8
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of int: 4
System is Little Endian
Size of long long int: 8
Size of size_t: 8
Size of float: 4
Size of long int: 8
Size of char: 1
Size of double: 8
Size of long long int: 8
System is Little Endian
Size of float: 4
Size of char: 1
Size of long double: 16
System is Little Endian
System is Little Endian
System is Little Endian
Size of char: 1
Size of char: 1
Size of short: 2
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of int: 4
System is Little Endian
Size of short: 2
Size of double: 8
Size of size_t: 8
Size of int: 4
Size of int: 4
Size of char: 1
Size of size_t: 8
Size of long double: 16
Size of short: 2
Size of long int: 8
Size of long int: 8
Size of int: 4
Size of size_t: 8
Size of long long int: 8
Size of long int: 8
Size of long long int: 8
Size of size_t: 8
Size of float: 4
Size of long int: 8
Size of float: 4
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of double: 8
Size of float: 4
Size of float: 4
Size of long double: 16
Size of double: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of long double: 16
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of char: 1
Size of char: 1
Size of short: 2
Size of short: 2
Size of short: 2
Size of int: 4
Size of int: 4
Size of int: 4
Size of size_t: 8
System is Little Endian
Size of size_t: 8
Size of long int: 8
System is Little Endian
Size of float: 4
Size of double: 8
Size of long double: 16
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of char: 1
Size of float: 4
Size of char: 1
Size of short: 2
Size of double: 8
Size of short: 2
Size of size_t: 8
Size of long double: 16
System is Little Endian
System is Little Endian
System is Little Endian
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of long long int: 8
Size of char: 1
Size of float: 4
Size of short: 2
Size of char: 1
Size of double: 8
Size of int: 4
Size of short: 2
Size of size_t: 8
Size of short: 2
Size of long double: 16
Size of long int: 8
Size of int: 4
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of int: 4
Size of float: 4
Size of long int: 8
Size of double: 8
Size of size_t: 8
Size of long double: 16
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
System is Little Endian
Size of long int: 8
Size of double: 8
Size of long double: 16
Size of long long int: 8
System is Little Endian
Size of char: 1
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of double: 8
Size of short: 2
System is Little Endian
Size of int: 4
System is Little Endian
System is Little Endian
Size of long double: 16
Size of size_t: 8
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of char: 1
Size of char: 1
Size of long int: 8
Size of short: 2
Size of long long int: 8
Size of short: 2
Size of int: 4
Size of short: 2
Size of float: 4
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of size_t: 8
Size of double: 8
Size of long int: 8
Size of long int: 8
Size of long double: 16
Size of long long int: 8
Size of long long int: 8
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of float: 4
Size of double: 8
Size of double: 8
Size of long long int: 8
Size of long double: 16
Size of long double: 16
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of double: 8
Size of long double: 16
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of size_t: 8
System is Little Endian
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
System is Little Endian
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of char: 1
Size of double: 8
Size of short: 2
Size of short: 2
Size of long double: 16
Size of int: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of long int: 8
Size of double: 8
Size of long double: 16
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of char: 1
Size of long long int: 8
Size of short: 2
Size of float: 4
Size of int: 4
Size of double: 8
Size of size_t: 8
Size of long double: 16
Size of long int: 8
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of float: 4
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
Size of char: 1
Size of char: 1
Size of short: 2
Size of short: 2
Size of int: 4
Size of char: 1
System is Little Endian
System is Little Endian
Size of size_t: 8
Size of short: 2
Size of char: 1
System is Little Endian
Size of int: 4
Size of char: 1
System is Little Endian
Size of int: 4
Size of short: 2
System is Little Endian
Size of short: 2
Size of int: 4
System is Little Endian
System is Little Endian
System is Little Endian
Size of char: 1
Size of char: 1
Size of char: 1
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
System is Little Endian
Size of double: 8
Size of long double: 16
System is Little Endian
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of char: 1
System is Little Endian
Size of short: 2
Size of int: 4
Size of char: 1
Size of short: 2
Size of char: 1
Size of short: 2
Size of size_t: 8
Size of short: 2
Size of long int: 8
Size of int: 4
System is Little Endian
Size of size_t: 8
Size of int: 4
Size of long int: 8
Size of char: 1
Size of size_t: 8
Size of short: 2
Size of long long int: 8
Size of int: 4
System is Little Endian
Size of float: 4
Size of long int: 8
Size of double: 8
Size of size_t: 8
Size of long double: 16
Size of long int: 8
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of char: 1
System is Little Endian
Size of float: 4
Size of float: 4
Size of short: 2
Size of double: 8
Size of int: 4
System is Little Endian
Size of long double: 16
Size of char: 1
Size of double: 8
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of long double: 16
Size of char: 1
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of short: 2
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of size_t: 8
Size of long int: 8
Size of long int: 8
Size of int: 4
Size of long long int: 8
Size of long long int: 8
System is Little Endian
Size of float: 4
Size of float: 4
Size of double: 8
Size of double: 8
Size of size_t: 8
Size of long double: 16
Size of long int: 8
Size of long double: 16
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of float: 4
Size of short: 2
Size of double: 8
Size of int: 4
Size of long double: 16
Size of size_t: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of long long int: 8
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long int: 8
Size of float: 4
Size of double: 8
Size of long long int: 8
Size of long double: 16
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of short: 2
Size of short: 2
Size of short: 2
Size of int: 4
Size of int: 4
Size of size_t: 8
Size of int: 4
Size of long int: 8
Size of size_t: 8
Size of size_t: 8
Size of long int: 8
Size of long int: 8
Size of long long int: 8
Size of long long int: 8
Size of long long int: 8
Size of long int: 8
Size of float: 4
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of float: 4
Size of double: 8
Size of double: 8
Size of long double: 16
Size of long double: 16
Size of long double: 16
Size of long int: 8
Size of long long int: 8
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
System is Little Endian
Size of float: 4
Size of double: 8
Size of long double: 16
Size of char: 1
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of size_t: 8
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long int: 8
Size of size_t: 8
Size of long long int: 8
Size of long long int: 8
Size of float: 4
Size of float: 4
Size of double: 8
Size of long int: 8
Size of double: 8
Size of long double: 16
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of float: 4
Size of double: 8
Size of long double: 16
Size of short: 2
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of size_t: 8
Size of float: 4
Size of double: 8
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long double: 16
Size of long int: 8
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of int: 4
Size of char: 1
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of short: 2
Size of float: 4
Size of double: 8
Size of int: 4
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of float: 4
Size of size_t: 8
Size of long int: 8
Size of double: 8
Size of long long int: 8
Size of long double: 16
Size of float: 4
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
System is Little Endian
System is Little Endian
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
Size of char: 1
Size of short: 2
Size of int: 4
Size of size_t: 8
Size of long int: 8
Size of long long int: 8
Size of float: 4
Size of double: 8
Size of long double: 16
WARNING: Since size of integer is only 4 bytes, some routines that input and output integer arguments will be limited to 2GB.  For example, ROMIO will fail to work if try to write >2GB file, since buffer sizes must then be <2GB
begin: init_dumps
dump number of columns(see global.nondepmnemonics.h)
RESTARTDUMPTYPE dnumcolumns[0]=54
RESTARTUPPERPOLEDUMPTYPE dnumcolumns[1]=4
RESTARTMETRICDUMPTYPE dnumcolumns[2]=0
IMAGEDUMPTYPE dnumcolumns[3]=1
MAINDUMPTYPE dnumcolumns[4]=71
GRIDDUMPTYPE dnumcolumns[5]=126
AVG1DUMPTYPE dnumcolumns[6]=0
AVG2DUMPTYPE dnumcolumns[7]=0
DEBUGDUMPTYPE dnumcolumns[8]=0
FIELDLINEDUMPTYPE dnumcolumns[9]=29
ENODEBUGDUMPTYPE dnumcolumns[10]=0
DISSDUMPTYPE dnumcolumns[11]=0
OTHERDUMPTYPE dnumcolumns[12]=0
FLUXDUMPTYPE dnumcolumns[13]=0
EOSDUMPTYPE dnumcolumns[14]=0
RADDUMPTYPE dnumcolumns[15]=51
VPOTDUMPTYPE dnumcolumns[16]=0
FAILFLOORDUDUMPTYPE dnumcolumns[17]=18
ENERDUMPTYPE dnumcolumns[18]=0
DISSMEASUREDUMPTYPE dnumcolumns[19]=0
FLUXSIMPLEDUMPTYPE dnumcolumns[20]=68
FAKEDUMPTYPE dnumcolumns[21]=0

end: init_dumps
Using limited 3D polar boundary conditions
spin=0.8FIELD=0.8Jon=0.8Condition=2                  0.8
After Conditionals: RADNT_RHODONUT= 0.000978582153050593
RADNT_RHOATMMIN=9.78582e-09 RADNT_RHOATMMIN=9.78582e-09 RADNT_UINTATMMIN=2.18398e-12 RADNT_ERADATMMIN=8.41823e-16 RADNT_RHODONUT=0.000978582 
begin: init_placeongrid_griddecomposition ... end: init_placeongrid_griddecomposition
start restart_init: proc=0000
begin restart init
begin reading rdump# 0 ... begin reading header of restart file

headercount=10435
end reading header of restart file
end reading rdump# 0 ... before extrarestartfunction()
before restart_process_extra_variables()
before restart_read_defs()

headercount=10435
before read_coord_parms()
before write_restart_header(TEXTOUTPUT,log_file)
begin writing header of restart file

headercount=10435
end writing header of restart file
before restart_write(3)
begin dumping rdump# 3 ... begin writing header of restart file

headercount=10435
end writing header of restart file
end dumping rdump# 3 ... proc: 0 t=      23926.359018147 failed=0
end restart_init
end restart_init: proc=0000
useghostplusactive=0 extrazones4emf=0
Setting orders
Boundary number checks
Changed do_{conserved/source/transverse_flux}_integration to 0 since avgscheme[1]=0 avgscheme[2]=0 avgscheme[3]=0
WARNING: With SENSITIVE!=LONGDOUBLETYPE you may have problems for some integral or counting quantities (e.g. DTd too small or many zones to integrate over)
WARNING: DODISS/DOLUMVSR/DODISSVSR/DOENTROPY!=DONOENTROPY set to 1, code may be slower
WARNING: CHECKONINVERSION set to 1, code may be slower
WARNING: interporder[dimen=1 lim=40]=7 -1 > TIMEORDER=2 is unstable in region where Courant condition setting dt
WARNING: interporder[dimen=2 lim=40]=7 -1 > TIMEORDER=2 is unstable in region where Courant condition setting dt
WARNING: interporder[dimen=3 lim=40]=7 -1 > TIMEORDER=2 is unstable in region where Courant condition setting dt
WARNING: BSQORHOLIMIT=                  100 for totalsize[1]=128
WARNING: BSQOULIMIT=            100000000 for totalsize[1]=128
WARNING: UORHOLIMIT=          10000000000 for totalsize[1]=128
WARNING: BSQORHOLIMIT=                  100 for totalsize[2]=64
WARNING: BSQOULIMIT=            100000000 for totalsize[2]=64
WARNING: UORHOLIMIT=          10000000000 for totalsize[2]=64
WARNING: BSQORHOLIMIT=                  100 for totalsize[3]=16
WARNING: BSQOULIMIT=            100000000 for totalsize[3]=16
WARNING: UORHOLIMIT=          10000000000 for totalsize[3]=16
******SUPERWARNING******: If far from black hole, even with apparently g^{t\phi}\sim 0 at the 10^{-34} level, still leads to exponential spurious growth in u^3 u_3 and B^3 to catastrophic levels!!  For KS metric with a\neq 0, best to use analytical gcon that leads to exactly g^{t\phi}=0 and so \beta[\phi]=0.
WARNING: Using inaccurate CONNDERTYPE can lead to problems, such as force errors near poles can lead to secular errors growing.
WARNING: WHICHEOM==WITHGDET is inferior to WHICHEOM==WITHNOGDET and setting NOGDETU1=NOGDETU2=1 near the poles where force balance is difficult to ensure.  If pressure constant, then NOGDET method ensures force balance between flux and source terms.
Setting interp loop
dimen=1 lim=40 avgo=0
dimen=2 lim=40 avgo=0
dimen=3 lim=40 avgo=0
fluxloop[dimen=1][0] = 1
fluxloop[dimen=1][1] = 0
fluxloop[dimen=1][2] = 0
fluxloop[dimen=1][3] = 1
fluxloop[dimen=1][4] = 0
fluxloop[dimen=1][5] = 8
fluxloop[dimen=1][6] = -4
fluxloop[dimen=1][7] = 11
fluxloop[dimen=1][8] = -4
fluxloop[dimen=1][9] = 11
fluxloop[dimen=2][0] = 0
fluxloop[dimen=2][1] = 1
fluxloop[dimen=2][2] = 0
fluxloop[dimen=2][3] = 2
fluxloop[dimen=2][4] = -4
fluxloop[dimen=2][5] = 11
fluxloop[dimen=2][6] = 0
fluxloop[dimen=2][7] = 8
fluxloop[dimen=2][8] = -4
fluxloop[dimen=2][9] = 11
fluxloop[dimen=3][0] = 0
fluxloop[dimen=3][1] = 0
fluxloop[dimen=3][2] = 1
fluxloop[dimen=3][3] = 3
fluxloop[dimen=3][4] = -4
fluxloop[dimen=3][5] = 11
fluxloop[dimen=3][6] = -4
fluxloop[dimen=3][7] = 11
fluxloop[dimen=3][8] = 0
fluxloop[dimen=3][9] = 8
emffluxloop[dimen=1][0] = 0
emffluxloop[dimen=1][1] = 1
emffluxloop[dimen=1][2] = 1
emffluxloop[dimen=1][3] = 4
emffluxloop[dimen=1][4] = -4
emffluxloop[dimen=1][5] = 11
emffluxloop[dimen=1][6] = -4
emffluxloop[dimen=1][7] = 11
emffluxloop[dimen=1][8] = -4
emffluxloop[dimen=1][9] = 11
emffluxloop[dimen=2][0] = 1
emffluxloop[dimen=2][1] = 0
emffluxloop[dimen=2][2] = 1
emffluxloop[dimen=2][3] = 0
emffluxloop[dimen=2][4] = -4
emffluxloop[dimen=2][5] = 11
emffluxloop[dimen=2][6] = -4
emffluxloop[dimen=2][7] = 11
emffluxloop[dimen=2][8] = -4
emffluxloop[dimen=2][9] = 11
emffluxloop[dimen=3][0] = 1
emffluxloop[dimen=3][1] = 1
emffluxloop[dimen=3][2] = 0
emffluxloop[dimen=3][3] = 0
emffluxloop[dimen=3][4] = -4
emffluxloop[dimen=3][5] = 11
emffluxloop[dimen=3][6] = -4
emffluxloop[dimen=3][7] = 11
emffluxloop[dimen=3][8] = -4
emffluxloop[dimen=3][9] = 11
Uconsevolveloop[0] = 0
Uconsevolveloop[1] = 0
Uconsevolveloop[2] = 0
Uconsevolveloop[3] = 0
Uconsevolveloop[4] = 0
Uconsevolveloop[5] = 7
Uconsevolveloop[6] = 0
Uconsevolveloop[7] = 7
Uconsevolveloop[8] = 0
Uconsevolveloop[9] = 7
Uconsloop[0] = 0
Uconsloop[1] = 0
Uconsloop[2] = 0
Uconsloop[3] = 0
Uconsloop[4] = 0
Uconsloop[5] = 7
Uconsloop[6] = 0
Uconsloop[7] = 7
Uconsloop[8] = 0
Uconsloop[9] = 7
emfUconsloop[0] = 0
emfUconsloop[1] = 0
emfUconsloop[2] = 0
emfUconsloop[3] = 0
emfUconsloop[4] = 0
emfUconsloop[5] = 7
emfUconsloop[6] = 0
emfUconsloop[7] = 7
emfUconsloop[8] = 0
emfUconsloop[9] = 7
Reporting bound loop
boundvartype=0
numnpr=17
numbnd[1]=4
numbnd[2]=4
numbnd[3]=4
Note inout/lowhigh iter has POINTDOWN=1 and POINTUP=0
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=1]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=1]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=1]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=1]=11
inboundloop[dimen=1]=-4 outboundloop[dimen=1]=11
riin=0 riout=7
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=2]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=2]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=2]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=2]=11
inboundloop[dimen=2]=-4 outboundloop[dimen=2]=11
rjin=0 rjout=7
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=3]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=3]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=3]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=3]=11
inboundloop[dimen=3]=-4 outboundloop[dimen=3]=11
rkin=0 rkout=7
dosetbc[dir=0]=1
dosetbc[dir=1]=1
dosetbc[dir=2]=1
dosetbc[dir=3]=1
dosetbc[dir=4]=1
dosetbc[dir=5]=1
boundvartype=1
numnpr=17
numbnd[1]=4
numbnd[2]=4
numbnd[3]=4
Note inout/lowhigh iter has POINTDOWN=1 and POINTUP=0
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=1]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=1]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=1]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=1]=11
inboundloop[dimen=1]=-4 outboundloop[dimen=1]=11
riin=0 riout=7
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=2]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=2]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=2]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=2]=11
inboundloop[dimen=2]=-4 outboundloop[dimen=2]=11
rjin=0 rjout=7
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=3]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=3]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=3]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=3]=11
inboundloop[dimen=3]=-4 outboundloop[dimen=3]=11
rkin=0 rkout=7
dosetbc[dir=0]=1
dosetbc[dir=1]=1
dosetbc[dir=2]=1
dosetbc[dir=3]=1
dosetbc[dir=4]=1
dosetbc[dir=5]=1
boundvartype=2
numnpr=17
numbnd[1]=4
numbnd[2]=4
numbnd[3]=4
Note inout/lowhigh iter has POINTDOWN=1 and POINTUP=0
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=1]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=1]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=1]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=1]=11
inboundloop[dimen=1]=-4 outboundloop[dimen=1]=11
riin=0 riout=7
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=2]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=2]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=2]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=2]=11
inboundloop[dimen=2]=-4 outboundloop[dimen=2]=11
rjin=0 rjout=7
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=3]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=3]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=3]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=3]=11
inboundloop[dimen=3]=-4 outboundloop[dimen=3]=11
rkin=0 rkout=7
dosetbc[dir=0]=1
dosetbc[dir=1]=1
dosetbc[dir=2]=1
dosetbc[dir=3]=1
dosetbc[dir=4]=1
dosetbc[dir=5]=1
boundvartype=3
numnpr=17
numbnd[1]=4
numbnd[2]=4
numbnd[3]=4
Note inout/lowhigh iter has POINTDOWN=1 and POINTUP=0
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=1]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=1]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=1]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=1]=11
inboundloop[dimen=1]=-4 outboundloop[dimen=1]=11
riin=0 riout=7
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=2]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=2]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=2]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=2]=11
inboundloop[dimen=2]=-4 outboundloop[dimen=2]=11
rjin=0 rjout=7
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=3]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=3]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=3]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=3]=11
inboundloop[dimen=3]=-4 outboundloop[dimen=3]=11
rkin=0 rkout=7
dosetbc[dir=0]=1
dosetbc[dir=1]=1
dosetbc[dir=2]=1
dosetbc[dir=3]=1
dosetbc[dir=4]=1
dosetbc[dir=5]=1
boundvartype=4
numnpr=2
numbnd[1]=4
numbnd[2]=4
numbnd[3]=4
Note inout/lowhigh iter has POINTDOWN=1 and POINTUP=0
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=1]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=1]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=1]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=1]=11
inboundloop[dimen=1]=-4 outboundloop[dimen=1]=11
riin=0 riout=7
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=2]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=2]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=2]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=2]=11
inboundloop[dimen=2]=-4 outboundloop[dimen=2]=11
rjin=0 rjout=7
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=3]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=3]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=3]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=3]=11
inboundloop[dimen=3]=-4 outboundloop[dimen=3]=11
rkin=0 rkout=7
dosetbc[dir=0]=1
dosetbc[dir=1]=1
dosetbc[dir=2]=1
dosetbc[dir=3]=1
dosetbc[dir=4]=1
dosetbc[dir=5]=1
boundvartype=5
numnpr=18
numbnd[1]=4
numbnd[2]=4
numbnd[3]=4
Note inout/lowhigh iter has POINTDOWN=1 and POINTUP=0
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=1]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=1]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=1]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=1]=11
inboundloop[dimen=1]=-4 outboundloop[dimen=1]=11
riin=0 riout=8
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=2]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=2]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=2]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=2]=11
inboundloop[dimen=2]=-4 outboundloop[dimen=2]=11
rjin=0 rjout=8
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=3]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=3]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=3]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=3]=11
inboundloop[dimen=3]=-4 outboundloop[dimen=3]=11
rkin=0 rkout=8
dosetbc[dir=0]=1
dosetbc[dir=1]=1
dosetbc[dir=2]=1
dosetbc[dir=3]=1
dosetbc[dir=4]=1
dosetbc[dir=5]=1
boundvartype=6
numnpr=18
numbnd[1]=1
numbnd[2]=1
numbnd[3]=1
Note inout/lowhigh iter has POINTDOWN=1 and POINTUP=0
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=1]=-1
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=1]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=1]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=1]=8
inboundloop[dimen=1]=-1 outboundloop[dimen=1]=8
riin=0 riout=8
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=2]=-1
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=2]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=2]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=2]=8
inboundloop[dimen=2]=-1 outboundloop[dimen=2]=8
rjin=0 rjout=8
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=3]=-1
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=3]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=3]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=3]=8
inboundloop[dimen=3]=-1 outboundloop[dimen=3]=8
rkin=0 rkout=8
dosetbc[dir=0]=1
dosetbc[dir=1]=1
dosetbc[dir=2]=1
dosetbc[dir=3]=1
dosetbc[dir=4]=1
dosetbc[dir=5]=1
boundvartype=7
numnpr=4
numbnd[1]=4
numbnd[2]=4
numbnd[3]=4
Note inout/lowhigh iter has POINTDOWN=1 and POINTUP=0
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=1]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=1]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=1]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=1]=11
inboundloop[dimen=1]=-4 outboundloop[dimen=1]=11
riin=0 riout=8
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=2]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=2]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=2]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=2]=11
inboundloop[dimen=2]=-4 outboundloop[dimen=2]=11
rjin=0 rjout=8
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=3]=-4
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=3]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=3]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=3]=11
inboundloop[dimen=3]=-4 outboundloop[dimen=3]=11
rkin=0 rkout=8
dosetbc[dir=0]=1
dosetbc[dir=1]=1
dosetbc[dir=2]=1
dosetbc[dir=3]=1
dosetbc[dir=4]=1
dosetbc[dir=5]=1
boundvartype=8
numnpr=4
numbnd[1]=1
numbnd[2]=1
numbnd[3]=1
Note inout/lowhigh iter has POINTDOWN=1 and POINTUP=0
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=1]=-1
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=1]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=1]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=1]=8
inboundloop[dimen=1]=-1 outboundloop[dimen=1]=8
riin=0 riout=8
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=2]=-1
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=2]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=2]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=2]=8
inboundloop[dimen=2]=-1 outboundloop[dimen=2]=8
rjin=0 rjout=8
inoutlohi[inoutboundary=1][lowhighrange=1][dimen=3]=-1
inoutlohi[inoutboundary=1][lowhighrange=0][dimen=3]=-1
inoutlohi[inoutboundary=0][lowhighrange=1][dimen=3]=8
inoutlohi[inoutboundary=0][lowhighrange=0][dimen=3]=8
inboundloop[dimen=3]=-1 outboundloop[dimen=3]=8
rkin=0 rkout=8
dosetbc[dir=0]=1
dosetbc[dir=1]=1
dosetbc[dir=2]=1
dosetbc[dir=3]=1
dosetbc[dir=4]=1
dosetbc[dir=5]=1
proc: 0 post_par_set completed: failed=0
ITERATIVE dx1: Rout=                     10000 R0=     0.2000000000000000111 npow=                         1 cpow2=                         1 cpow3=                         1 npow2=                         6 x1br=     7.6008024545417489648 rbr=                      2000
x1max = 8.537 (dx1max/x1max = -9.57156e-15, itno = 31)
set_drsing() START
set_drsing() END
drsing=  0.00689569862124688
set_position_stores() BEGIN
set_position_stores() END
set_grid_metrics() BEGIN
set_grid_metrics() END
set_connection() BEGIN
set_connection() END
proc: 0 grid restart completed: failed=0
Rhor=                  1.6 Risco=      2.9066438544642 MBH=                    1 a=                  0.8 QBH=                    0 EP3=                    0 THETAROT=                    0
proc: 0 set_box_grid_parameters completed: failed=0
BEGIN check_rmin
rmin(i=-4,X=   -0.266781402821688) =     0.965840463733378
r=    0.965840463733378 Rhor=                  1.6 :: rmin/rh:     0.603650289833361
inner grid is inside horizon
END check_rmin
BEGIN check_spc_singularities_user
WARNING: check_spc_singularities_user() oddly stalls sometimes...
END check_spc_singularities_user
WARNING: done with check_spc_singularities_user(), but it sometimes stalls or goes very very slow for no apparently good reason.  E.g., on NAUTILUS with -O0, very slow checks.  But just putting dualfprintf before and after the above call leads to quick finish.
proc: 0 init_grid_post_set_grid completed: failed=0
MCOORD=2
COMPDIM=3
MAXBND=4
FLUXB=5
before pre_fixup() during restart: proc=0000
after pre_fixup() during restart: proc=0000
before fixup() during restart: proc=0000
after fixup() during restart: proc=0000
before bound_prim() during restart: proc=0000
after bound_prim() during restart: proc=0000
before ucons2upointppoint during restart: proc=0000
after ucons2upointppoint during restart: proc=0000
before post_init and post_init_specific_init during restart: proc=0000
begin: post_init
end: post_init
WHICHPROBLEM: 25
Constants
LBAR=1.477e+06 TBAR=4.92673e-05 VBAR=2.99792e+10 RHOBAR=1 MBAR=3.2221e+18 UBAR=8.98755e+20 TEMPBAR=1.08882e+13
ARAD_CODE=        118316261947818976 OPACITYBAR=6.77049e-07 KAPPA_ES_CODE(1,1)=85.264 KAPPA_FF_CODE(1,1,1)=1.05804e-13 KAPPA_BF_CODE(1,1,1)=3.79712e-16 KAPPA_GENFF_CODE(1,1)=1.06184e-13
ARAD_CODE_DEF=1.18316e+17
GAMMAMAXRAD=50
MASSCM=1.477e+06 1 koral unit = 6.173e+15 harm units (g/cm^3)
after post_init and post_init_specific_init during restart: proc=0000
before restart_init_checks() during restart: proc=0000
proc: 0 fixup restart completed: failed=0
proc: 0 bound restart completed: failed=0
begin dumping image# -3 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# -3 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end restart_init_checks
after restart_init_checks() during restart: proc=0000
proc: 0 restart completed: failed=0
dtij[1]=   0.0274132384482651 wavendti=-1 wavendtj=8 wavendtk=7
dtij[2]=  0.00541368858682509 wavendti=-1 wavendtj=8 wavendtk=7
dtij[3]=    0.041509517377016 wavendti=-1 wavendtj=0 wavendtk=1
wavedt_1=  0.00407686475083181 wavedt_2=  0.00448468695022865
ndtfinal=  0.00407686475083181 wavedt=  0.00407686475083181 accdt=               1e+100 gravitydt=               1e+100
accdti=-100 accdtj=-100 accdtk=-100 :: gravitydti=-100  gravitydtj=-100  gravitydtk=-100
dt=  0.00407686475083181 at t=      23926.359018147 at nstep=5220000 at realnstep=5220000
end init.c
proc: 0000 : Start initial diagnostics
t=      23926.359018147 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5982 @ t=                23928 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
proc: 0000 : End initial diagnostics
proc: 0000 : Start computation
t=     23928.0027280542 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5982 @ t=                23928 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5982 : tt=     23928.0027280542 tlastdump=                23924 tdump=                23928 dumpc=0
begin dumping image# 5982 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5982 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23928.0027280542 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5983 @ t=                23932 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5982 : tt=     23928.0027280542 tlastdump=                23924 tdump=                23928 dumpc=0
begin dumping fieldlinedump# 5982 ... end dumping fieldlinedump# 5982 ... t=     23928.6116254383 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5983 @ t=                23932 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23928.6116254383 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23930.8530647807 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5983 @ t=                23932 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23930.8530647807 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23932.0037328633 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5983 @ t=                23932 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5983 : tt=     23932.0037328633 tlastdump=     23928.0027280542 tdump=                23932 dumpc=1
begin dumping image# 5983 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5983 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23932.0037328633 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5984 @ t=                23936 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5983 : tt=     23932.0037328633 tlastdump=     23928.0027280542 tdump=                23932 dumpc=1
begin dumping fieldlinedump# 5983 ... end dumping fieldlinedump# 5983 ... t=     23933.1013239699 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5984 @ t=                23936 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     23933.1013239699 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23935.3496116474 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5984 @ t=                23936 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23935.3496116474 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23936.0002711202 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5984 @ t=                23936 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5984 : tt=     23936.0002711202 tlastdump=     23932.0037328633 tdump=                23936 dumpc=1
begin dumping image# 5984 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5984 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23936.0002711202 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5985 @ t=                23940 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5984 : tt=     23936.0002711202 tlastdump=     23932.0037328633 tdump=                23936 dumpc=1
begin dumping fieldlinedump# 5984 ... end dumping fieldlinedump# 5984 ... t=     23937.5933264687 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5985 @ t=                23940 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     23937.5933264687 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23939.8453942611 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5985 @ t=                23940 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23939.8453942611 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23940.0029299814 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5985 @ t=                23940 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5985 : tt=     23940.0029299814 tlastdump=     23936.0002711202 tdump=                23940 dumpc=1
begin dumping image# 5985 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5985 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23940.0029299814 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5986 @ t=                23944 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5985 : tt=     23940.0029299814 tlastdump=     23936.0002711202 tdump=                23940 dumpc=1
begin dumping fieldlinedump# 5985 ... end dumping fieldlinedump# 5985 ... t=     23942.0951325344 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5986 @ t=                23944 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     23942.0951325344 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23944.0008982526 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5986 @ t=                23944 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5986 : tt=     23944.0008982526 tlastdump=     23940.0029299814 tdump=                23944 dumpc=1
begin dumping image# 5986 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5986 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23944.0008982526 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5987 @ t=                23948 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5986 : tt=     23944.0008982526 tlastdump=     23940.0029299814 tdump=                23944 dumpc=1
begin dumping fieldlinedump# 5986 ... end dumping fieldlinedump# 5986 ... t=     23944.3419566788 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5987 @ t=                23948 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23944.3419566788 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23946.5929449704 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5987 @ t=                23948 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     23946.5929449704 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=      23948.000618294 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5987 @ t=                23948 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5987 : tt=      23948.000618294 tlastdump=     23944.0008982526 tdump=                23948 dumpc=1
begin dumping image# 5987 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5987 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=      23948.000618294 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5988 @ t=                23952 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: dump_cnt=5987 : tt=      23948.000618294 tlastdump=     23944.0008982526 tdump=                23948 dumpc=1
begin dumping fieldlinedump# 5987 ... end dumping fieldlinedump# 5987 ... t=     23948.8534580286 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5988 @ t=                23952 (dt=                    4): restart=0 @ nstep=5225000 (dt=5000) dtfake=500
dumping: restart: 0 localnstep: 5225000 nlastrestart: 5219999 nrestart: 5225000 restartc: 0
begin dumping rdump# 0 ... begin writing header of restart file

headercount=10435
end writing header of restart file
end dumping rdump# 0 ... t=     23948.8534580286 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5988 @ t=                23952 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23948.8534580286 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23951.0971008097 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5988 @ t=                23952 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     23951.0971008097 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23952.0028364796 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5988 @ t=                23952 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=5988 : tt=     23952.0028364796 tlastdump=      23948.000618294 tdump=                23952 dumpc=1
begin dumping image# 5988 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5988 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23952.0028364796 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5989 @ t=                23956 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=5988 : tt=     23952.0028364796 tlastdump=      23948.000618294 tdump=                23952 dumpc=1
begin dumping fieldlinedump# 5988 ... end dumping fieldlinedump# 5988 ... t=     23953.3332440046 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5989 @ t=                23956 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23953.3332440046 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=      23955.568064687 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5989 @ t=                23956 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=      23955.568064687 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23956.0017381937 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5989 @ t=                23956 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=5989 : tt=     23956.0017381937 tlastdump=     23952.0028364796 tdump=                23956 dumpc=1
begin dumping image# 5989 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5989 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23956.0017381937 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5990 @ t=                23960 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=5989 : tt=     23956.0017381937 tlastdump=     23952.0028364796 tdump=                23956 dumpc=1
begin dumping fieldlinedump# 5989 ... end dumping fieldlinedump# 5989 ... t=     23957.8022793953 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5990 @ t=                23960 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23957.8022793953 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23960.0028594166 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5990 @ t=                23960 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=5990 : tt=     23960.0028594166 tlastdump=     23956.0017381937 tdump=                23960 dumpc=1
begin dumping image# 5990 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5990 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23960.0028594166 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5991 @ t=                23964 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=5990 : tt=     23960.0028594166 tlastdump=     23956.0017381937 tdump=                23960 dumpc=1
begin dumping fieldlinedump# 5990 ... end dumping fieldlinedump# 5990 ... t=      23960.047717634 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5991 @ t=                23964 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=      23960.047717634 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23962.3006084429 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5991 @ t=                23964 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23962.3006084429 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23964.0006569696 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5991 @ t=                23964 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=5991 : tt=     23964.0006569696 tlastdump=     23960.0028594166 tdump=                23964 dumpc=1
begin dumping image# 5991 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5991 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23964.0006569696 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5992 @ t=                23968 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=5991 : tt=     23964.0006569696 tlastdump=     23960.0028594166 tdump=                23964 dumpc=1
begin dumping fieldlinedump# 5991 ... end dumping fieldlinedump# 5991 ... t=     23964.5595360582 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5992 @ t=                23968 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     23964.5595360582 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23966.7949973363 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5992 @ t=                23968 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23966.7949973363 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23968.0033392446 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5992 @ t=                23968 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=5992 : tt=     23968.0033392446 tlastdump=     23964.0006569696 tdump=                23968 dumpc=1
begin dumping image# 5992 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5992 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23968.0033392446 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5993 @ t=                23972 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=5992 : tt=     23968.0033392446 tlastdump=     23964.0006569696 tdump=                23968 dumpc=1
begin dumping fieldlinedump# 5992 ... end dumping fieldlinedump# 5992 ... t=     23969.0515178552 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5993 @ t=                23972 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     23969.0515178552 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23971.2963992192 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5993 @ t=                23972 (dt=                    4): restart=1 @ nstep=5230000 (dt=5000) dtfake=500
dumping: restart: 1 localnstep: 5230000 nlastrestart: 5225000 nrestart: 5230000 restartc: 1
begin dumping rdump# 1 ... begin writing header of restart file

headercount=10435
end writing header of restart file
end dumping rdump# 1 ... t=     23971.2963992192 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5993 @ t=                23972 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23971.2963992192 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23972.0003525761 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5993 @ t=                23972 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5993 : tt=     23972.0003525761 tlastdump=     23968.0033392446 tdump=                23972 dumpc=1
begin dumping image# 5993 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5993 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23972.0003525761 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5994 @ t=                23976 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5993 : tt=     23972.0003525761 tlastdump=     23968.0033392446 tdump=                23972 dumpc=1
begin dumping fieldlinedump# 5993 ... end dumping fieldlinedump# 5993 ... t=     23973.5599335764 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5994 @ t=                23976 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     23973.5599335764 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23975.8059483747 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5994 @ t=                23976 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23975.8059483747 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23976.0040136719 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5994 @ t=                23976 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5994 : tt=     23976.0040136719 tlastdump=     23972.0003525761 tdump=                23976 dumpc=1
begin dumping image# 5994 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5994 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23976.0040136719 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5995 @ t=                23980 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5994 : tt=     23976.0040136719 tlastdump=     23972.0003525761 tdump=                23976 dumpc=1
begin dumping fieldlinedump# 5994 ... end dumping fieldlinedump# 5994 ... t=      23978.051595239 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5995 @ t=                23980 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=      23978.051595239 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23980.0024524887 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5995 @ t=                23980 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5995 : tt=     23980.0024524887 tlastdump=     23976.0040136719 tdump=                23980 dumpc=1
begin dumping image# 5995 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5995 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23980.0024524887 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5996 @ t=                23984 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5995 : tt=     23980.0024524887 tlastdump=     23976.0040136719 tdump=                23980 dumpc=1
begin dumping fieldlinedump# 5995 ... end dumping fieldlinedump# 5995 ... t=     23980.3042116128 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5996 @ t=                23984 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23980.3042116128 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=      23982.559916819 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5996 @ t=                23984 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=      23982.559916819 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23984.0008112753 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5996 @ t=                23984 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5996 : tt=     23984.0008112753 tlastdump=     23980.0024524887 tdump=                23984 dumpc=1
begin dumping image# 5996 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5996 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23984.0008112753 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5997 @ t=                23988 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5996 : tt=     23984.0008112753 tlastdump=     23980.0024524887 tdump=                23984 dumpc=1
begin dumping fieldlinedump# 5996 ... end dumping fieldlinedump# 5996 ... t=     23984.8147336058 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5997 @ t=                23988 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23984.8147336058 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23987.0722066888 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5997 @ t=                23988 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     23987.0722066888 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23988.0028061954 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5997 @ t=                23988 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5997 : tt=     23988.0028061954 tlastdump=     23984.0008112753 tdump=                23988 dumpc=1
begin dumping image# 5997 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5997 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23988.0028061954 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5998 @ t=                23992 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5997 : tt=     23988.0028061954 tlastdump=     23984.0008112753 tdump=                23988 dumpc=1
begin dumping fieldlinedump# 5997 ... end dumping fieldlinedump# 5997 ... t=     23989.3340789438 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5998 @ t=                23992 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23989.3340789438 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23991.5989930793 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5998 @ t=                23992 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     23991.5989930793 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23992.0039265505 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5998 @ t=                23992 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5998 : tt=     23992.0039265505 tlastdump=     23988.0028061954 tdump=                23992 dumpc=1
begin dumping image# 5998 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5998 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23992.0039265505 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5999 @ t=                23996 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: dump_cnt=5998 : tt=     23992.0039265505 tlastdump=     23988.0028061954 tdump=                23992 dumpc=1
begin dumping fieldlinedump# 5998 ... end dumping fieldlinedump# 5998 ... t=     23993.8527707351 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5999 @ t=                23996 (dt=                    4): restart=0 @ nstep=5235000 (dt=5000) dtfake=500
dumping: restart: 0 localnstep: 5235000 nlastrestart: 5230000 nrestart: 5235000 restartc: 1
begin dumping rdump# 0 ... begin writing header of restart file

headercount=10435
end writing header of restart file
end dumping rdump# 0 ... t=     23993.8527707351 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5999 @ t=                23996 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23993.8527707351 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23996.0030649233 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=5999 @ t=                23996 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=5999 : tt=     23996.0030649233 tlastdump=     23992.0039265505 tdump=                23996 dumpc=1
begin dumping image# 5999 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 5999 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     23996.0030649233 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6000 @ t=                24000 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=5999 : tt=     23996.0030649233 tlastdump=     23992.0039265505 tdump=                23996 dumpc=1
begin dumping fieldlinedump# 5999 ... end dumping fieldlinedump# 5999 ... t=      23996.106638983 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6000 @ t=                24000 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=      23996.106638983 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     23998.3665237867 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6000 @ t=                24000 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     23998.3665237867 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpbegin dumping rdump# -241 ... begin writing header of restart file

headercount=10435
end writing header of restart file
end dumping rdump# -241 ... t=     24000.0024670371 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6000 @ t=                24000 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=6000 : tt=     24000.0024670371 tlastdump=     23996.0030649233 tdump=                24000 dumpc=1
begin dumping image# 6000 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6000 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24000.0024670371 to do: tener=                23928 (dt=                    4): dump_cnt=240 @ t=                24000 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6001 @ t=                24004 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=240 : tt=     24000.0024670371 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping dump# 240 ... end dumping dump# 240 ... t=     24000.0024670371 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6001 @ t=                24004 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=6000 : tt=     24000.0024670371 tlastdump=     23996.0030649233 tdump=                24000 dumpc=1
begin dumping fieldlinedump# 6000 ... end dumping fieldlinedump# 6000 ... t=     24000.0024670371 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6001 @ t=                24004 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=240 : tt=     24000.0024670371 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping raddump# 240 ... end dumping raddump# 240 ... t=     24000.0024670371 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6001 @ t=                24004 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=240 : tt=     24000.0024670371 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping failfloordudump# 240 ... end dumping failfloordudump# 240 ... t=     24000.0024670371 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6001 @ t=                24004 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=240 : tt=     24000.0024670371 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fluxsimpledump# 240 ... end dumping fluxsimpledump# 240 ... t=     24000.6157839177 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6001 @ t=                24004 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24000.6157839177 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24002.8755860718 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6001 @ t=                24004 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24002.8755860718 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24004.0028939464 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6001 @ t=                24004 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=6001 : tt=     24004.0028939464 tlastdump=     24000.0024670371 tdump=                24004 dumpc=1
begin dumping image# 6001 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6001 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24004.0028939464 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6002 @ t=                24008 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=6001 : tt=     24004.0028939464 tlastdump=     24000.0024670371 tdump=                24004 dumpc=1
begin dumping fieldlinedump# 6001 ... end dumping fieldlinedump# 6001 ... t=     24005.1293609957 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6002 @ t=                24008 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24005.1293609957 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24007.3829182678 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6002 @ t=                24008 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24007.3829182678 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24008.0028806578 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6002 @ t=                24008 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=6002 : tt=     24008.0028806578 tlastdump=     24004.0028939464 tdump=                24008 dumpc=1
begin dumping image# 6002 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6002 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24008.0028806578 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6003 @ t=                24012 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=6002 : tt=     24008.0028806578 tlastdump=     24004.0028939464 tdump=                24008 dumpc=1
begin dumping fieldlinedump# 6002 ... end dumping fieldlinedump# 6002 ... t=     24009.6394617848 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6003 @ t=                24012 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24009.6394617848 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24011.8901417477 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6003 @ t=                24012 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24011.8901417477 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24012.0025694799 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6003 @ t=                24012 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=6003 : tt=     24012.0025694799 tlastdump=     24008.0028806578 tdump=                24012 dumpc=1
begin dumping image# 6003 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6003 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24012.0025694799 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6004 @ t=                24016 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=6003 : tt=     24012.0025694799 tlastdump=     24008.0028806578 tdump=                24012 dumpc=1
begin dumping fieldlinedump# 6003 ... end dumping fieldlinedump# 6003 ... t=     24014.1371262009 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6004 @ t=                24016 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24014.1371262009 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24016.0008173602 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6004 @ t=                24016 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=6004 : tt=     24016.0008173602 tlastdump=     24012.0025694799 tdump=                24016 dumpc=1
begin dumping image# 6004 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6004 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24016.0008173602 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6005 @ t=                24020 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: dump_cnt=6004 : tt=     24016.0008173602 tlastdump=     24012.0025694799 tdump=                24016 dumpc=1
begin dumping fieldlinedump# 6004 ... end dumping fieldlinedump# 6004 ... t=     24016.3779450481 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6005 @ t=                24020 (dt=                    4): restart=1 @ nstep=5240000 (dt=5000) dtfake=500
dumping: restart: 1 localnstep: 5240000 nlastrestart: 5235000 nrestart: 5240000 restartc: 1
begin dumping rdump# 1 ... begin writing header of restart file

headercount=10435
end writing header of restart file
end dumping rdump# 1 ... t=     24016.3779450481 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6005 @ t=                24020 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24016.3779450481 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24018.6250318081 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6005 @ t=                24020 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24018.6250318081 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24020.0015749222 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6005 @ t=                24020 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=6005 : tt=     24020.0015749222 tlastdump=     24016.0008173602 tdump=                24020 dumpc=1
begin dumping image# 6005 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6005 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24020.0015749222 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6006 @ t=                24024 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=6005 : tt=     24020.0015749222 tlastdump=     24016.0008173602 tdump=                24020 dumpc=1
begin dumping fieldlinedump# 6005 ... end dumping fieldlinedump# 6005 ... t=     24020.8753989364 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6006 @ t=                24024 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24020.8753989364 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24023.1274209189 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6006 @ t=                24024 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24023.1274209189 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24024.0040146907 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6006 @ t=                24024 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=6006 : tt=     24024.0040146907 tlastdump=     24020.0015749222 tdump=                24024 dumpc=1
begin dumping image# 6006 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6006 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24024.0040146907 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6007 @ t=                24028 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=6006 : tt=     24024.0040146907 tlastdump=     24020.0015749222 tdump=                24024 dumpc=1
begin dumping fieldlinedump# 6006 ... end dumping fieldlinedump# 6006 ... t=     24025.3720888638 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6007 @ t=                24028 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24025.3720888638 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24027.6211606645 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6007 @ t=                24028 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24027.6211606645 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24028.0037834337 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6007 @ t=                24028 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=6007 : tt=     24028.0037834337 tlastdump=     24024.0040146907 tdump=                24028 dumpc=1
begin dumping image# 6007 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6007 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24028.0037834337 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6008 @ t=                24032 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=6007 : tt=     24028.0037834337 tlastdump=     24024.0040146907 tdump=                24028 dumpc=1
begin dumping fieldlinedump# 6007 ... end dumping fieldlinedump# 6007 ... t=     24029.8716698563 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6008 @ t=                24032 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24029.8716698563 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24032.0003436056 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6008 @ t=                24032 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=6008 : tt=     24032.0003436056 tlastdump=     24028.0037834337 tdump=                24032 dumpc=1
begin dumping image# 6008 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6008 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24032.0003436056 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6009 @ t=                24036 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=6008 : tt=     24032.0003436056 tlastdump=     24028.0037834337 tdump=                24032 dumpc=1
begin dumping fieldlinedump# 6008 ... end dumping fieldlinedump# 6008 ... t=     24032.1121483771 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6009 @ t=                24036 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24032.1121483771 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24034.3405910654 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6009 @ t=                24036 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24034.3405910654 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=      24036.000273259 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6009 @ t=                24036 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=6009 : tt=      24036.000273259 tlastdump=     24032.0003436056 tdump=                24036 dumpc=1
begin dumping image# 6009 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6009 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=      24036.000273259 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6010 @ t=                24040 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=6009 : tt=      24036.000273259 tlastdump=     24032.0003436056 tdump=                24036 dumpc=1
begin dumping fieldlinedump# 6009 ... end dumping fieldlinedump# 6009 ... t=     24036.5591408995 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6010 @ t=                24040 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24036.5591408995 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24038.7781646109 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6010 @ t=                24040 (dt=                    4): restart=0 @ nstep=5245000 (dt=5000) dtfake=500
dumping: restart: 0 localnstep: 5245000 nlastrestart: 5240000 nrestart: 5245000 restartc: 1
begin dumping rdump# 0 ... begin writing header of restart file

headercount=10435
end writing header of restart file
end dumping rdump# 0 ... t=     24038.7781646109 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6010 @ t=                24040 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24038.7781646109 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24040.0015465224 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6010 @ t=                24040 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6010 : tt=     24040.0015465224 tlastdump=      24036.000273259 tdump=                24040 dumpc=1
begin dumping image# 6010 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6010 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24040.0015465224 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6011 @ t=                24044 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6010 : tt=     24040.0015465224 tlastdump=      24036.000273259 tdump=                24040 dumpc=1
begin dumping fieldlinedump# 6010 ... end dumping fieldlinedump# 6010 ... t=      24040.996087431 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6011 @ t=                24044 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=      24040.996087431 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24043.2264543695 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6011 @ t=                24044 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24043.2264543695 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24044.0012254517 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6011 @ t=                24044 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6011 : tt=     24044.0012254517 tlastdump=     24040.0015465224 tdump=                24044 dumpc=1
begin dumping image# 6011 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6011 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24044.0012254517 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6012 @ t=                24048 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6011 : tt=     24044.0012254517 tlastdump=     24040.0015465224 tdump=                24044 dumpc=1
begin dumping fieldlinedump# 6011 ... end dumping fieldlinedump# 6011 ... t=      24045.467508712 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6012 @ t=                24048 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=      24045.467508712 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=      24047.703317872 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6012 @ t=                24048 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=      24047.703317872 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24048.0033030118 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6012 @ t=                24048 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6012 : tt=     24048.0033030118 tlastdump=     24044.0012254517 tdump=                24048 dumpc=1
begin dumping image# 6012 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6012 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24048.0033030118 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6013 @ t=                24052 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6012 : tt=     24048.0033030118 tlastdump=     24044.0012254517 tdump=                24048 dumpc=1
begin dumping fieldlinedump# 6012 ... end dumping fieldlinedump# 6012 ... t=     24049.9419467491 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6013 @ t=                24052 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24049.9419467491 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24052.0025015123 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6013 @ t=                24052 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6013 : tt=     24052.0025015123 tlastdump=     24048.0033030118 tdump=                24052 dumpc=1
begin dumping image# 6013 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6013 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24052.0025015123 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6014 @ t=                24056 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6013 : tt=     24052.0025015123 tlastdump=     24048.0033030118 tdump=                24052 dumpc=1
begin dumping fieldlinedump# 6013 ... end dumping fieldlinedump# 6013 ... t=     24052.1767462038 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6014 @ t=                24056 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24052.1767462038 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24054.4144217131 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6014 @ t=                24056 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24054.4144217131 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24056.0028670461 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6014 @ t=                24056 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6014 : tt=     24056.0028670461 tlastdump=     24052.0025015123 tdump=                24056 dumpc=1
begin dumping image# 6014 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6014 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24056.0028670461 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6015 @ t=                24060 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6014 : tt=     24056.0028670461 tlastdump=     24052.0025015123 tdump=                24056 dumpc=1
begin dumping fieldlinedump# 6014 ... end dumping fieldlinedump# 6014 ... t=     24056.6520079935 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6015 @ t=                24060 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24056.6520079935 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=      24058.898104068 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6015 @ t=                24060 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=      24058.898104068 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24060.0001752122 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6015 @ t=                24060 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6015 : tt=     24060.0001752122 tlastdump=     24056.0028670461 tdump=                24060 dumpc=1
begin dumping image# 6015 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6015 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24060.0001752122 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6016 @ t=                24064 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: dump_cnt=6015 : tt=     24060.0001752122 tlastdump=     24056.0028670461 tdump=                24060 dumpc=1
begin dumping fieldlinedump# 6015 ... end dumping fieldlinedump# 6015 ... t=     24061.1489148738 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6016 @ t=                24064 (dt=                    4): restart=1 @ nstep=5250000 (dt=5000) dtfake=500
dumping: restart: 1 localnstep: 5250000 nlastrestart: 5245000 nrestart: 5250000 restartc: 1
begin dumping rdump# 1 ... begin writing header of restart file

headercount=10435
end writing header of restart file
end dumping rdump# 1 ... t=     24061.1489148738 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6016 @ t=                24064 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24061.1489148738 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24063.4084719567 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6016 @ t=                24064 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24063.4084719567 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24064.0023757357 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6016 @ t=                24064 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=6016 : tt=     24064.0023757357 tlastdump=     24060.0001752122 tdump=                24064 dumpc=1
begin dumping image# 6016 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6016 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24064.0023757357 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6017 @ t=                24068 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=6016 : tt=     24064.0023757357 tlastdump=     24060.0001752122 tdump=                24064 dumpc=1
begin dumping fieldlinedump# 6016 ... end dumping fieldlinedump# 6016 ... t=     24065.6841544335 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6017 @ t=                24068 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24065.6841544335 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=      24067.957053142 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6017 @ t=                24068 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=      24067.957053142 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24068.0025582811 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6017 @ t=                24068 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=6017 : tt=     24068.0025582811 tlastdump=     24064.0023757357 tdump=                24068 dumpc=1
begin dumping image# 6017 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6017 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24068.0025582811 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6018 @ t=                24072 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=6017 : tt=     24068.0025582811 tlastdump=     24064.0023757357 tdump=                24068 dumpc=1
begin dumping fieldlinedump# 6017 ... end dumping fieldlinedump# 6017 ... t=     24070.2315477476 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6018 @ t=                24072 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24070.2315477476 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=      24072.000530511 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6018 @ t=                24072 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=6018 : tt=      24072.000530511 tlastdump=     24068.0025582811 tdump=                24072 dumpc=1
begin dumping image# 6018 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6018 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=      24072.000530511 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6019 @ t=                24076 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=6018 : tt=      24072.000530511 tlastdump=     24068.0025582811 tdump=                24072 dumpc=1
begin dumping fieldlinedump# 6018 ... end dumping fieldlinedump# 6018 ... t=     24072.5289028237 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6019 @ t=                24076 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24072.5289028237 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24074.8486660631 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6019 @ t=                24076 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24074.8486660631 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24076.0024438592 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6019 @ t=                24076 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=6019 : tt=     24076.0024438592 tlastdump=      24072.000530511 tdump=                24076 dumpc=1
begin dumping image# 6019 whichpl: 0 scale: 0 limits: 0 vartype: 0
 end dumping image# 6019 whichpl: 0 scale: 0 limits: 0 vartype: 0
 t=     24076.0024438592 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6020 @ t=                24080 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=6019 : tt=     24076.0024438592 tlastdump=      24072.000530511 tdump=                24076 dumpc=1
begin dumping fieldlinedump# 6019 ... end dumping fieldlinedump# 6019 ... t=     24077.2229552835 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6020 @ t=                24080 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=0 : tt=     24077.2229552835 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedumpt=     24079.5778117838 to do: tener=                23928 (dt=                    4): dump_cnt=241 @ t=                24100 (dt=                  100) : avg_cnt=0 @ t=                24000 (dt=                  100) : debug_cnt=0 @ t=                24000 (dt=                  400) : image_cnt=6020 @ t=                24080 (dt=                    4): restart=0 @ nstep=5255000 (dt=5000) dtfake=500
dumping: dump_cnt=1 : tt=     24079.5778117838 tlastdump=                23900 tdump=                24000 dumpc=0
begin dumping fakedumpend dumping fakedump